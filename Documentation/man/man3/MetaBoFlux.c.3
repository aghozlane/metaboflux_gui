.TH "metaboflux/src/MetaBoFlux.c" 3 "Wed Apr 27 2011" "Version 2.0" "MetaboFlux" \" -*- nroff -*-
.ad l
.nh
.SH NAME
metaboflux/src/MetaBoFlux.c \- 
.PP
Program for simulated annealing analysis.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <time.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <assert.h>\fP
.br
\fC#include <getopt.h>\fP
.br
\fC#include <gsl/gsl_blas.h>\fP
.br
\fC#include <gsl/gsl_multimin.h>\fP
.br
\fC#include <gsl/gsl_math.h>\fP
.br
\fC#include <gsl/gsl_rng.h>\fP
.br
\fC#include <gsl/gsl_siman.h>\fP
.br
\fC#include <gsl/gsl_ieee_utils.h>\fP
.br
\fC#include <gsl/gsl_statistics_double.h>\fP
.br
\fC#include <sbml/SBMLTypes.h>\fP
.br
\fC#include <libxml/parser.h>\fP
.br
\fC#include <libxml/xpath.h>\fP
.br
\fC#include 'mpi.h'\fP
.br
\fC#include 'especes.h'\fP
.br
\fC#include 'equations.h'\fP
.br
\fC#include 'simulation.h'\fP
.br
\fC#include 'xml_parameter.h'\fP
.br
\fC#include 'data_parameters.h'\fP
.br
\fC#include 'gsl_recuit.h'\fP
.br
\fC#include 'gsl_mod.h'\fP
.br
\fC#include 'gsl_min.h'\fP
.br
\fC#include 'gsl_sd.h'\fP
.br
\fC#include 'mpi_load.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBListArguments\fP"
.br
.RI "\fIList of arguments. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_GNU_SOURCE\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBListArguments\fP \fBListArguments\fP"
.br
.ti -1c
.RI "typedef struct \fBListArguments\fP * \fBpListArguments\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBpListArguments\fP \fBalloc_arguments\fP (void)"
.br
.RI "\fIAlloc memory for the struct pListArguments. \fP"
.ti -1c
.RI "void \fBfree_arguments\fP (\fBpListArguments\fP args)"
.br
.RI "\fIFree the struct pListArguments. \fP"
.ti -1c
.RI "void \fBhelp_print\fP (void)"
.br
.RI "\fIPrint the usage help. \fP"
.ti -1c
.RI "void \fBerror_activity\fP (int activity)"
.br
.RI "\fIPrint the error notification. \fP"
.ti -1c
.RI "void \fBargument_analysis\fP (int argc, char **argv, \fBpListArguments\fP args)"
.br
.RI "\fIPrint the error notification. \fP"
.ti -1c
.RI "void \fBcheck_common\fP (\fBpListArguments\fP args)"
.br
.RI "\fICheck obligatory arguments. \fP"
.ti -1c
.RI "void \fBcheck_arguments\fP (\fBpListArguments\fP args)"
.br
.RI "\fICheck program arguments. \fP"
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.RI "\fIEnter in the program for simulated annealing. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "struct \fBoption\fP \fBlong_options\fP [15]"
.br
.in -1c
.SH "Detailed Description"
.PP 
Program for simulated annealing analysis. 

This file is part of MetaBoFlux (http://www.cbib.u-bordeaux2.fr/metaboflux/) Copyright (C) 2010 Amine Ghozlane from LaBRI and University of Bordeaux 1
.PP
MetaBoFlux is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
.PP
MetaBoFlux is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
.PP
You should have received a copy of the GNU Lesser General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
.PP
\fBAuthor:\fP
.RS 4
{Amine Ghozlane} 
.RE
.PP
\fBVersion:\fP
.RS 4
3.0 
.RE
.PP
\fBDate:\fP
.RS 4
9 novembre 2009 
.RE
.PP

.PP
Definition in file \fBMetaBoFlux.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define _GNU_SOURCE"
.PP
Definition at line 26 of file MetaBoFlux.c.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBListArguments\fP \fBListArguments\fP"
.SS "typedef struct \fBListArguments\fP * \fBpListArguments\fP"
.SH "Function Documentation"
.PP 
.SS "\fBpListArguments\fP alloc_arguments (void)"
.PP
Alloc memory for the struct pListArguments. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP

.PP
Definition at line 103 of file MetaBoFlux.c.
.PP
References ListArguments::activity, ListArguments::debug, ListArguments::files_path, ListArguments::group, and ListArguments::port.
.PP
Referenced by main().
.SS "void argument_analysis (intargc, char **argv, \fBpListArguments\fPargs)"
.PP
Print the error notification. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIargc\fP Number of arguments 
.br
\fIargv\fP List of arguments 
.br
\fIargs\fP struct \fBListArguments\fP 
.RE
.PP

.PP
Definition at line 185 of file MetaBoFlux.c.
.PP
References ListArguments::activity, ListArguments::debug, error_activity(), ListArguments::files_path, ListArguments::group, help_print(), and ListArguments::port.
.PP
Referenced by main().
.SS "void check_arguments (\fBpListArguments\fPargs)"
.PP
Check program arguments. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIargs\fP struct \fBListArguments\fP 
.RE
.PP

.PP
Definition at line 361 of file MetaBoFlux.c.
.PP
References ListArguments::activity, check_common(), ListArguments::files_path, and help_print().
.PP
Referenced by main().
.SS "void check_common (\fBpListArguments\fPargs)"
.PP
Check obligatory arguments. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIargs\fP struct \fBListArguments\fP 
.RE
.PP

.PP
Definition at line 332 of file MetaBoFlux.c.
.PP
References ListArguments::files_path, and help_print().
.PP
Referenced by check_arguments().
.SS "void error_activity (intactivity)"
.PP
Print the error notification. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIactivity\fP Activity chosen 
.RE
.PP

.PP
Definition at line 170 of file MetaBoFlux.c.
.PP
References help_print().
.PP
Referenced by argument_analysis().
.SS "void free_arguments (\fBpListArguments\fParguments)"
.PP
Free the struct pListArguments. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIarguments\fP struct pListArguments 
.RE
.PP

.PP
Definition at line 131 of file MetaBoFlux.c.
.PP
References ListArguments::files_path.
.PP
Referenced by main().
.SS "void help_print (void)"
.PP
Print the usage help. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP

.PP
Definition at line 142 of file MetaBoFlux.c.
.PP
References a.
.PP
Referenced by argument_analysis(), check_arguments(), check_common(), and error_activity().
.SS "int main (intargc, char **argv)"
.PP
Enter in the program for simulated annealing. \fBAuthor:\fP
.RS 4
Amine Ghozlane 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIargc\fP Number of arguments 
.br
\fIargv\fP List of arguments 
.RE
.PP
\fBReturns:\fP
.RS 4
EXIT_SUCCESS Normal stop of the program 
.RE
.PP

.PP
Definition at line 399 of file MetaBoFlux.c.
.PP
References ListArguments::activity, alloc_arguments(), argument_analysis(), check_arguments(), compute_mpi(), ListArguments::debug, ListArguments::files_path, free_arguments(), ListArguments::group, and ListArguments::port.
.SH "Variable Documentation"
.PP 
.SS "struct \fBoption\fP \fBlong_options\fP[15]"\fBInitial value:\fP
.PP
.nf

    {
        
        {'simulated_annealing',     no_argument,       0, 's'}, 
        {'minimization',  no_argument,       0, 'm'}, 
        {'modelling',  no_argument, 0, 'e'}, 
        {'standard_deviation',  no_argument, 0, 't'}, 
        {'group',  no_argument, 0, 'u'}, 
        {'debug',  no_argument, 0, 'd'}, 
        {'sbml',    required_argument, 0, 'l'}, 
        {'par',    required_argument, 0, 'r'}, 
        {'log',    required_argument, 0, 'i'}, 
        {'out_file',    required_argument, 0, 'g'}, 
        {'out',    required_argument, 0, 'o'}, 
        {'ratio_file',  required_argument, 0, 'a'}, 
        {'port',    required_argument, 0, 'p'},  
        {'help',    no_argument, 0, 'h'},  
        {0, 0, 0, 0}  
    }
.fi
.PP
Definition at line 78 of file MetaBoFlux.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for MetaboFlux from the source code.
