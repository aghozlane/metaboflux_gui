<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="simulation_8c" kind="file">
    <compoundname>simulation.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">gsl/gsl_rng.h</includes>
    <includes local="no">sbml/SBMLTypes.h</includes>
    <includes refid="especes_8h" local="yes">especes.h</includes>
    <includes refid="simulation_8h" local="yes">simulation.h</includes>
    <incdepgraph>
      <node id="555">
        <label>assert.h</label>
      </node>
      <node id="553">
        <label>stdlib.h</label>
      </node>
      <node id="558">
        <label>especes.h</label>
        <link refid="especes_8h"/>
      </node>
      <node id="551">
        <label>metaboflux/src/simulation.c</label>
        <link refid="simulation.c"/>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="554" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="556" relation="include">
        </childnode>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
      </node>
      <node id="557">
        <label>sbml/SBMLTypes.h</label>
      </node>
      <node id="554">
        <label>string.h</label>
      </node>
      <node id="559">
        <label>simulation.h</label>
        <link refid="simulation_8h"/>
      </node>
      <node id="556">
        <label>gsl/gsl_rng.h</label>
      </node>
      <node id="552">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="simulation_8c_1ab96386e57e0e58e356974d26ced8eeb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_initEspeceAmounts</definition>
        <argsstring>(Model_t *mod, pEspeces molecules, int nbEspeces)</argsstring>
        <name>SBML_initEspeceAmounts</name>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspeces</declname>
        </param>
        <briefdescription>
<para>Alloc memory and initialize the struct <ref refid="structEspeces" kindref="compound">Especes</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspeces</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="47" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="46" bodyend="58"/>
        <references refid="especes_8c_1a4ca513fe43dc3919cab3044166d9f9fb" compoundref="especes_8c" startline="134" endline="138">Especes_save</references>
        <referencedby refid="simulation_8h_1a443eccd5296f1a2844c4d97e514a61c5" compoundref="simulation_8c" startline="515" endline="550">SBML_compute_simulation</referencedby>
        <referencedby refid="simulation_8h_1a16b0c1105bbcfc7ddc9a9e044d567ed5" compoundref="simulation_8c" startline="614" endline="659">SBML_compute_simulation_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a56b2d00e703b09b6c3f52e971517ecb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SBML_findReaction</definition>
        <argsstring>(char **reaction, const char *react, int nb_reaction)</argsstring>
        <name>SBML_findReaction</name>
        <param>
          <type>char **</type>
          <declname>reaction</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>react</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_reaction</declname>
        </param>
        <briefdescription>
<para>Determine if the reaction is study. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reaction</parametername>
</parameternamelist>
<parameterdescription>
<para>List of reactions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>react</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structReaction" kindref="compound">Reaction</ref> of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_reaction</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of reactions </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of the molecules if it&apos;s study </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="70" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="69" bodyend="79"/>
        <references refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" compoundref="simulation_8h" startline="30">OK</references>
        <referencedby refid="simulation_8h_1a0b14dd5a1a8cf318c2f7974bd9a8cc1c" compoundref="simulation_8c" startline="420" endline="455">SBML_score</referencedby>
        <referencedby refid="simulation_8h_1a4e69a993d7460adf46b17909e8991565" compoundref="simulation_8c" startline="105" endline="146">SBML_setReactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a2aee345900876fe3c6888dfc620265b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SBML_evalExpression</definition>
        <argsstring>(const char *formule)</argsstring>
        <name>SBML_evalExpression</name>
        <param>
          <type>const char *</type>
          <declname>formule</declname>
        </param>
        <briefdescription>
<para>Get the reaction ratio define in the sbml. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>formule</parametername>
</parameternamelist>
<parameterdescription>
<para>Formule SBML </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return double value of the constraint </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="89" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="88" bodyend="92"/>
        <referencedby refid="simulation_8h_1a0b14dd5a1a8cf318c2f7974bd9a8cc1c" compoundref="simulation_8c" startline="420" endline="455">SBML_score</referencedby>
        <referencedby refid="simulation_8h_1a4e69a993d7460adf46b17909e8991565" compoundref="simulation_8c" startline="105" endline="146">SBML_setReactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a744147acf49de269630c456d0c5f4247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_setReactions</definition>
        <argsstring>(Model_t *mod, pEspeces molecules, pScore result, double *reactions_ratio, int nbReactions, int nbEspeces)</argsstring>
        <name>SBML_setReactions</name>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>reactions_ratio</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbReactions</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspeces</declname>
        </param>
        <briefdescription>
<para>Alloc memory and initialize the struct <ref refid="structEspeces" kindref="compound">Especes</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reactions_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>List of computed reaction ratio </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbReactions</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of reaction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspeces</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="106" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="105" bodyend="146"/>
        <references refid="especes_8c_1ab485f86ce621d4a8aaec5d1bc78f6105" compoundref="especes_8c" startline="64" endline="85">Especes_allocReactions</references>
        <references refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" compoundref="especes_8c" startline="214" endline="229">Especes_find</references>
        <references refid="structScore_1a9676111bf63c8d420921fe1c9187670d" compoundref="simulation_8h" startline="56">Score::nb_reaction</references>
        <references refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" compoundref="simulation_8h" startline="30">OK</references>
        <references refid="structScore_1af8245823c6e659cee49999dd3452a301" compoundref="simulation_8h" startline="55">Score::reaction</references>
        <references refid="simulation_8c_1a2aee345900876fe3c6888dfc620265b0" compoundref="simulation_8c" startline="88" endline="92">SBML_evalExpression</references>
        <references refid="simulation_8c_1a56b2d00e703b09b6c3f52e971517ecb3" compoundref="simulation_8c" startline="69" endline="79">SBML_findReaction</references>
        <referencedby refid="simulation_8h_1a443eccd5296f1a2844c4d97e514a61c5" compoundref="simulation_8c" startline="515" endline="550">SBML_compute_simulation</referencedby>
        <referencedby refid="simulation_8h_1a16b0c1105bbcfc7ddc9a9e044d567ed5" compoundref="simulation_8c" startline="614" endline="659">SBML_compute_simulation_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a5630aef6f927ffef62f6535977ae8200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SBML_checkQuantite</definition>
        <argsstring>(Model_t *mod, Reaction_t *react, int nbEspeces, pEspeces molecules)</argsstring>
        <name>SBML_checkQuantite</name>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>Reaction_t *</type>
          <declname>react</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspeces</declname>
        </param>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <briefdescription>
<para>Determine the number of reaction for one molecule. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>react</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structReaction" kindref="compound">Reaction</ref> id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspeces</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of reaction for one molecule </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="159" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="158" bodyend="195"/>
        <references refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" compoundref="simulation_8h" startline="31">END</references>
        <references refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" compoundref="especes_8c" startline="214" endline="229">Especes_find</references>
        <references refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" compoundref="especes_8c" startline="252" endline="255">Especes_getQuantite</references>
        <referencedby refid="simulation_8h_1a5e7dd721fd4e49d51adaa2dd290879d4" compoundref="simulation_8c" startline="322" endline="340">SBML_EstimationReaction</referencedby>
        <referencedby refid="simulation_8h_1a79f018dd624b1b4a2ee36a2cb2939462" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1ac9187b648cc6e8a588813ab31c12193f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Reaction_t *</type>
        <definition>Reaction_t * SBML_reactChoice</definition>
        <argsstring>(pEspeces molecules, const gsl_rng *r, int ref)</argsstring>
        <name>SBML_reactChoice</name>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <param>
          <type>const gsl_rng *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Determine randomly the reaction to achieve for several nodes reactions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>Number reference of one molecule </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Id of the selected reaction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="207" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="206" bodyend="233"/>
        <references refid="structReaction_1ac0afd1990830008577958aec1d974e5d" compoundref="especes_8h" startline="36">Reaction::link</references>
        <references refid="structReaction_1a8f0edc9c1a0652917a5a18d3e9fe931a" compoundref="especes_8h" startline="37">Reaction::ratio</references>
        <references refid="structReaction_1ae0a12022d2d1cda2fe244b08a59be3d0" compoundref="especes_8h" startline="38">Reaction::suivant</references>
        <references refid="structEspeces_1a61d949a99599938950d1508d7cb86d4d" compoundref="especes_8h" startline="48">Especes::system</references>
        <referencedby refid="simulation_8h_1a79f018dd624b1b4a2ee36a2cb2939462" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a463648eb9010400731a5ffc3a13e56dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_reaction</definition>
        <argsstring>(Model_t *mod, pEspeces molecules, Reaction_t *react, int nbEspeces)</argsstring>
        <name>SBML_reaction</name>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <param>
          <type>Reaction_t *</type>
          <declname>react</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspeces</declname>
        </param>
        <briefdescription>
<para>Simulation of a discrete transision. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>react</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structReaction" kindref="compound">Reaction</ref> id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspeces</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="245" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="244" bodyend="270"/>
        <references refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" compoundref="especes_8c" startline="214" endline="229">Especes_find</references>
        <references refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" compoundref="especes_8c" startline="252" endline="255">Especes_getQuantite</references>
        <references refid="especes_8c_1a673f93f68d9ea2b84db4a73c2f4f5b39" compoundref="especes_8c" startline="239" endline="242">Especes_setQuantite</references>
        <referencedby refid="simulation_8h_1a79f018dd624b1b4a2ee36a2cb2939462" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a11e6f95793902cf6d16dcd127d09ab7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_allocTest</definition>
        <argsstring>(pTestReaction T, int nbReactions)</argsstring>
        <name>SBML_allocTest</name>
        <param>
          <type><ref refid="structTestReaction" kindref="compound">pTestReaction</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbReactions</declname>
        </param>
        <briefdescription>
<para>Alloc memory and initialize the struct pTestReaction. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Empty struct <ref refid="structTestReaction" kindref="compound">TestReaction</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbReactions</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of reactions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="280" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="279" bodyend="296"/>
        <references refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" compoundref="simulation_8h" startline="43">TestReaction::minStepTab</references>
        <references refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" compoundref="simulation_8h" startline="42">TestReaction::tabReactions</references>
        <referencedby refid="simulation_8h_1a79f018dd624b1b4a2ee36a2cb2939462" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a583a492a3d9db3c0f15b581f9762e85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_freeTest</definition>
        <argsstring>(pTestReaction T)</argsstring>
        <name>SBML_freeTest</name>
        <param>
          <type><ref refid="structTestReaction" kindref="compound">pTestReaction</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Free memory of the struct <ref refid="structTestReaction" kindref="compound">TestReaction</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structTestReaction" kindref="compound">TestReaction</ref> gives data on reaction </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="305" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="304" bodyend="309"/>
        <references refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" compoundref="simulation_8h" startline="43">TestReaction::minStepTab</references>
        <references refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" compoundref="simulation_8h" startline="42">TestReaction::tabReactions</references>
        <referencedby refid="simulation_8h_1a79f018dd624b1b4a2ee36a2cb2939462" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a26a3a6e92c8b51177e1e2c42c20fec30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SBML_EstimationReaction</definition>
        <argsstring>(Model_t *mod, pTestReaction T, pEspeces molecules, int ref, int nbEspeces)</argsstring>
        <name>SBML_EstimationReaction</name>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type><ref refid="structTestReaction" kindref="compound">pTestReaction</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspeces</declname>
        </param>
        <briefdescription>
<para>Alloc memory and initialize the struct <ref refid="structEspeces" kindref="compound">Especes</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structTestReaction" kindref="compound">TestReaction</ref> gives data on reaction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>Number reference of one molecule </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspeces</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Estimated number of feasible step by reaction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="323" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="322" bodyend="340"/>
        <references refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" compoundref="simulation_8h" startline="31">END</references>
        <references refid="structReaction_1ac0afd1990830008577958aec1d974e5d" compoundref="especes_8h" startline="36">Reaction::link</references>
        <references refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" compoundref="simulation_8h" startline="43">TestReaction::minStepTab</references>
        <references refid="simulation_8c_1a5630aef6f927ffef62f6535977ae8200" compoundref="simulation_8c" startline="158" endline="195">SBML_checkQuantite</references>
        <references refid="structReaction_1ae0a12022d2d1cda2fe244b08a59be3d0" compoundref="especes_8h" startline="38">Reaction::suivant</references>
        <references refid="structEspeces_1a61d949a99599938950d1508d7cb86d4d" compoundref="especes_8h" startline="48">Especes::system</references>
        <references refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" compoundref="simulation_8h" startline="42">TestReaction::tabReactions</references>
        <referencedby refid="simulation_8h_1a79f018dd624b1b4a2ee36a2cb2939462" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a36a9d2b343c5fcf0f4d88e5720fb86ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SBML_simulate</definition>
        <argsstring>(Model_t *mod, pEspeces molecules, const gsl_rng *r, pTestReaction T, char **banned, int nbBanned, int nbEspeces, int ref)</argsstring>
        <name>SBML_simulate</name>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <param>
          <type>const gsl_rng *</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="structTestReaction" kindref="compound">pTestReaction</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>banned</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbBanned</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspeces</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Simulate one step of petri net. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structTestReaction" kindref="compound">TestReaction</ref> gives data on reaction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>banned</parametername>
</parameternamelist>
<parameterdescription>
<para>List of banned compound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbBanned</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of banned compound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspeces</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>Number reference of one molecule </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Condition of stop/pursue </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="357" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="356" bodyend="407"/>
        <references refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" compoundref="simulation_8h" startline="31">END</references>
        <references refid="especes_8c_1a3391146ab0a83b7db9cbe3bdaec9fdab" compoundref="especes_8c" startline="265" endline="281">Especes_getNbreactions</references>
        <references refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" compoundref="especes_8c" startline="252" endline="255">Especes_getQuantite</references>
        <references refid="structReaction_1ac0afd1990830008577958aec1d974e5d" compoundref="especes_8h" startline="36">Reaction::link</references>
        <references refid="simulation_8h_1adfc3b19ea6cbce6f7cb2c54d16184974" compoundref="simulation_8h" startline="32">PURSUE</references>
        <references refid="simulation_8c_1a11e6f95793902cf6d16dcd127d09ab7a" compoundref="simulation_8c" startline="279" endline="296">SBML_allocTest</references>
        <references refid="simulation_8c_1a5630aef6f927ffef62f6535977ae8200" compoundref="simulation_8c" startline="158" endline="195">SBML_checkQuantite</references>
        <references refid="simulation_8c_1a26a3a6e92c8b51177e1e2c42c20fec30" compoundref="simulation_8c" startline="322" endline="340">SBML_EstimationReaction</references>
        <references refid="simulation_8c_1a583a492a3d9db3c0f15b581f9762e85b" compoundref="simulation_8c" startline="304" endline="309">SBML_freeTest</references>
        <references refid="simulation_8c_1ac9187b648cc6e8a588813ab31c12193f" compoundref="simulation_8c" startline="206" endline="233">SBML_reactChoice</references>
        <references refid="simulation_8c_1a463648eb9010400731a5ffc3a13e56dd" compoundref="simulation_8c" startline="244" endline="270">SBML_reaction</references>
        <references refid="structEspeces_1a61d949a99599938950d1508d7cb86d4d" compoundref="especes_8h" startline="48">Especes::system</references>
        <referencedby refid="simulation_8h_1a443eccd5296f1a2844c4d97e514a61c5" compoundref="simulation_8c" startline="515" endline="550">SBML_compute_simulation</referencedby>
        <referencedby refid="simulation_8h_1a16b0c1105bbcfc7ddc9a9e044d567ed5" compoundref="simulation_8c" startline="614" endline="659">SBML_compute_simulation_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1ad857fd679e78b0081d6c6898f6a51f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_score</definition>
        <argsstring>(Model_t *mod, pEspeces molecules, pScore result, double *reactions_ratio, int nbReactions, int nbEspeces)</argsstring>
        <name>SBML_score</name>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type><ref refid="structEspeces" kindref="compound">pEspeces</ref></type>
          <declname>molecules</declname>
        </param>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>reactions_ratio</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbReactions</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspeces</declname>
        </param>
        <briefdescription>
<para>Alloc memory and initialize the struct <ref refid="structEspeces" kindref="compound">Especes</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>molecules</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structEspeces" kindref="compound">Especes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reactions_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>List of computed reaction ratio </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbReactions</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of reactions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspeces</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="421" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="420" bodyend="455"/>
        <references refid="especes_8c_1a13dfbbe353cc238a9f53e5a183904fa4" compoundref="especes_8c" startline="149" endline="161">Especes_scoreSpecies</references>
        <references refid="structScore_1a29547e98673d89a8964a747015b2c26c" compoundref="simulation_8h" startline="53">Score::name</references>
        <references refid="structScore_1a9676111bf63c8d420921fe1c9187670d" compoundref="simulation_8h" startline="56">Score::nb_reaction</references>
        <references refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" compoundref="simulation_8h" startline="30">OK</references>
        <references refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" compoundref="simulation_8h" startline="54">Score::quantite</references>
        <references refid="structScore_1af8245823c6e659cee49999dd3452a301" compoundref="simulation_8h" startline="55">Score::reaction</references>
        <references refid="simulation_8c_1a2aee345900876fe3c6888dfc620265b0" compoundref="simulation_8c" startline="88" endline="92">SBML_evalExpression</references>
        <references refid="simulation_8c_1a56b2d00e703b09b6c3f52e971517ecb3" compoundref="simulation_8c" startline="69" endline="79">SBML_findReaction</references>
        <referencedby refid="simulation_8h_1a443eccd5296f1a2844c4d97e514a61c5" compoundref="simulation_8c" startline="515" endline="550">SBML_compute_simulation</referencedby>
        <referencedby refid="simulation_8h_1a16b0c1105bbcfc7ddc9a9e044d567ed5" compoundref="simulation_8c" startline="614" endline="659">SBML_compute_simulation_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a8823ee151e44d0d0b6b977bcebc7463e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_debugPrintHead</definition>
        <argsstring>(FILE *debugFile, int taille, char **name)</argsstring>
        <name>SBML_debugPrintHead</name>
        <param>
          <type>FILE *</type>
          <declname>debugFile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>taille</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Print the head of the debug file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debugFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File use for debug </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taille</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules/reactions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>List of molecules/reactions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="466" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="465" bodyend="474"/>
        <referencedby refid="simulation_8h_1a97ba6b434d34399d17103fbb366afd74" compoundref="simulation_8c" startline="560" endline="582">SBML_score_add</referencedby>
        <referencedby refid="gsl__sd_8h_1a8e6c5bf8137775f39959114bc6180898" compoundref="gsl__sd_8c" startline="56" endline="93">Sd_compute_simulation</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a792ef36e542159096d4567a125aee565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_debugPrint</definition>
        <argsstring>(FILE *debugFile, int tailleSpecies, int taille, double *quantite, double result)</argsstring>
        <name>SBML_debugPrint</name>
        <param>
          <type>FILE *</type>
          <declname>debugFile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tailleSpecies</declname>
        </param>
        <param>
          <type>int</type>
          <declname>taille</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>quantite</declname>
        </param>
        <param>
          <type>double</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Print the debuf file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debugFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File use for debug </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleSpecies</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taille</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of molecules/reactions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quantite</parametername>
</parameternamelist>
<parameterdescription>
<para>Quantity of molecules/reactions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Energy value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="487" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="486" bodyend="502"/>
        <referencedby refid="gsl__min_8h_1ac0cf1b97696b91752884777f11368223" compoundref="gsl__min_8c" startline="149" endline="199">Min_my_f</referencedby>
        <referencedby refid="gsl__mod_8h_1af23349f6e6b94ecae16caf9b7837eb06" compoundref="gsl__mod_8c" startline="109" endline="167">Mod_compute_modeling</referencedby>
        <referencedby refid="gsl__recuit_8h_1a76e1fe1e0d6471f07f55bcf28d247fa5" compoundref="gsl__recuit_8c" startline="65" endline="105">Recuit_energyFunction</referencedby>
        <referencedby refid="simulation_8h_1a97ba6b434d34399d17103fbb366afd74" compoundref="simulation_8c" startline="560" endline="582">SBML_score_add</referencedby>
        <referencedby refid="gsl__sd_8h_1a8e6c5bf8137775f39959114bc6180898" compoundref="gsl__sd_8c" startline="56" endline="93">Sd_compute_simulation</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a0eb4dda20b3a9cc639f50421f919f24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_compute_simulation</definition>
        <argsstring>(pScore result, Model_t *mod, double *reactions_ratio, gsl_rng *r, char **banned, int nbBanned)</argsstring>
        <name>SBML_compute_simulation</name>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>reactions_ratio</declname>
        </param>
        <param>
          <type>gsl_rng *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>banned</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbBanned</declname>
        </param>
        <briefdescription>
<para>Simulation of metabolic network. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reactions_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>List of computed reaction ratio </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>banned</parametername>
</parameternamelist>
<parameterdescription>
<para>List of banned compound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbBanned</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of banned compound </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="516" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="515" bodyend="550"/>
        <references refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" compoundref="simulation_8h" startline="31">END</references>
        <references refid="especes_8c_1ad40ac9cd39a9c9b70657f8e87209bc4d" compoundref="especes_8c" startline="40" endline="53">Especes_alloc</references>
        <references refid="especes_8c_1aa4c9945c5a0484f255ebe9ae6e1e7d30" compoundref="especes_8c" startline="94" endline="101">Especes_free</references>
        <references refid="simulation_8c_1ab96386e57e0e58e356974d26ced8eeb2" compoundref="simulation_8c" startline="46" endline="58">SBML_initEspeceAmounts</references>
        <references refid="simulation_8c_1ad857fd679e78b0081d6c6898f6a51f52" compoundref="simulation_8c" startline="420" endline="455">SBML_score</references>
        <references refid="simulation_8c_1a744147acf49de269630c456d0c5f4247" compoundref="simulation_8c" startline="105" endline="146">SBML_setReactions</references>
        <references refid="simulation_8c_1a36a9d2b343c5fcf0f4d88e5720fb86ce" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</references>
        <references refid="structScore_1a103843cc09238d77051b5a6ca4e48173" compoundref="simulation_8h" startline="57">Score::tailleReactions</references>
        <references refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" compoundref="simulation_8h" startline="58">Score::tailleSpecies</references>
        <referencedby refid="gsl__sd_8h_1a8e6c5bf8137775f39959114bc6180898" compoundref="gsl__sd_8c" startline="56" endline="93">Sd_compute_simulation</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1a4055d968d7db6b8f18d71f607a0d20d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_score_add</definition>
        <argsstring>(pScore result, pScore result_temp, FILE *debugFile)</argsstring>
        <name>SBML_score_add</name>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result_temp</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>debugFile</declname>
        </param>
        <briefdescription>
<para>Add scores. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> used for all the simulation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result_temp</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> used at each simulation step </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>debugFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File use for debug </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="561" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="560" bodyend="582"/>
        <references refid="structScore_1a29547e98673d89a8964a747015b2c26c" compoundref="simulation_8h" startline="53">Score::name</references>
        <references refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" compoundref="simulation_8h" startline="54">Score::quantite</references>
        <references refid="simulation_8c_1a792ef36e542159096d4567a125aee565" compoundref="simulation_8c" startline="486" endline="502">SBML_debugPrint</references>
        <references refid="simulation_8c_1a8823ee151e44d0d0b6b977bcebc7463e" compoundref="simulation_8c" startline="465" endline="474">SBML_debugPrintHead</references>
        <references refid="structScore_1aee1e19fc90d330de6fced582dff7102c" compoundref="simulation_8h" startline="59">Score::taille</references>
        <references refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" compoundref="simulation_8h" startline="58">Score::tailleSpecies</references>
        <referencedby refid="simulation_8h_1a16b0c1105bbcfc7ddc9a9e044d567ed5" compoundref="simulation_8c" startline="614" endline="659">SBML_compute_simulation_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1ad331b2a26934ff926772cf4329c4e359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_score_mean</definition>
        <argsstring>(pScore result, int n)</argsstring>
        <name>SBML_score_mean</name>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Mean quantities for score. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of simulation step </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="592" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="591" bodyend="598"/>
        <references refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" compoundref="simulation_8h" startline="54">Score::quantite</references>
        <references refid="structScore_1aee1e19fc90d330de6fced582dff7102c" compoundref="simulation_8h" startline="59">Score::taille</references>
        <referencedby refid="simulation_8h_1a16b0c1105bbcfc7ddc9a9e044d567ed5" compoundref="simulation_8c" startline="614" endline="659">SBML_compute_simulation_mean</referencedby>
      </memberdef>
      <memberdef kind="function" id="simulation_8c_1aeef27fa70d7f408e820193ef0a2c5496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SBML_compute_simulation_mean</definition>
        <argsstring>(FILE *debugFile, pScore result, pScore result_temp, Model_t *mod, double *reactions_ratio, gsl_rng *r, char **banned, int nbBanned, int nb_simulation)</argsstring>
        <name>SBML_compute_simulation_mean</name>
        <param>
          <type>FILE *</type>
          <declname>debugFile</declname>
        </param>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structScore" kindref="compound">pScore</ref></type>
          <declname>result_temp</declname>
        </param>
        <param>
          <type>Model_t *</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>reactions_ratio</declname>
        </param>
        <param>
          <type>gsl_rng *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>banned</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbBanned</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_simulation</declname>
        </param>
        <briefdescription>
<para>X time simulation of metabolic network. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debugFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File use for debug </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> used for all the simulation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result_temp</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structScore" kindref="compound">Score</ref> used at each simulation step </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Model of the SBML file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reactions_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>List of computed reaction ratio </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Random number generator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>banned</parametername>
</parameternamelist>
<parameterdescription>
<para>List of banned compound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbBanned</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of banned compound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_simulation</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of simulation step </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" line="615" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c" bodystart="614" bodyend="659"/>
        <references refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" compoundref="simulation_8h" startline="31">END</references>
        <references refid="especes_8c_1ad40ac9cd39a9c9b70657f8e87209bc4d" compoundref="especes_8c" startline="40" endline="53">Especes_alloc</references>
        <references refid="especes_8c_1aa4c9945c5a0484f255ebe9ae6e1e7d30" compoundref="especes_8c" startline="94" endline="101">Especes_free</references>
        <references refid="simulation_8c_1ab96386e57e0e58e356974d26ced8eeb2" compoundref="simulation_8c" startline="46" endline="58">SBML_initEspeceAmounts</references>
        <references refid="simulation_8c_1ad857fd679e78b0081d6c6898f6a51f52" compoundref="simulation_8c" startline="420" endline="455">SBML_score</references>
        <references refid="simulation_8c_1a4055d968d7db6b8f18d71f607a0d20d7" compoundref="simulation_8c" startline="560" endline="582">SBML_score_add</references>
        <references refid="simulation_8c_1ad331b2a26934ff926772cf4329c4e359" compoundref="simulation_8c" startline="591" endline="598">SBML_score_mean</references>
        <references refid="simulation_8c_1a744147acf49de269630c456d0c5f4247" compoundref="simulation_8c" startline="105" endline="146">SBML_setReactions</references>
        <references refid="simulation_8c_1a36a9d2b343c5fcf0f4d88e5720fb86ce" compoundref="simulation_8c" startline="356" endline="407">SBML_simulate</references>
        <referencedby refid="gsl__min_8h_1ac0cf1b97696b91752884777f11368223" compoundref="gsl__min_8c" startline="149" endline="199">Min_my_f</referencedby>
        <referencedby refid="gsl__mod_8h_1af23349f6e6b94ecae16caf9b7837eb06" compoundref="gsl__mod_8c" startline="109" endline="167">Mod_compute_modeling</referencedby>
        <referencedby refid="gsl__recuit_8h_1a76e1fe1e0d6471f07f55bcf28d247fa5" compoundref="gsl__recuit_8c" startline="65" endline="105">Recuit_energyFunction</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simulate a petri net. </para>    </briefdescription>
    <detaileddescription>
<para>This file is part of MetaBoFlux (<ulink url="http://www.cbib.u-bordeaux2.fr/metaboflux/">http://www.cbib.u-bordeaux2.fr/metaboflux/</ulink>) Copyright (C) 2010 Amine Ghozlane from LaBRI and University of Bordeaux 1</para><para>MetaBoFlux is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para><para>MetaBoFlux is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para><para>You should have received a copy of the GNU Lesser General Public License along with this program. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>&gt;.</para><para><simplesect kind="author"><para>{Amine Ghozlane} </para></simplesect>
<simplesect kind="version"><para>2.0 </para></simplesect>
<simplesect kind="date"><para>27 octobre 2009 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="26"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_rng.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sbml/SBMLTypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="especes_8h" kindref="compound" tooltip="Modelize a molecule.">especes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simulation_8h" kindref="compound" tooltip="Simulate a petri net.">simulation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/>Verification<sp/>des<sp/>BoundaryConditions,Local<sp/>parameter<sp/>values,<sp/>Global<sp/>parameter<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="simulation_8h_1a611031d9c60ad182fade6ae74e6b7e7e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1ab96386e57e0e58e356974d26ced8eeb2" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_initEspeceAmounts</ref>(Model_t<sp/>*mod,<sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspeces)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>de<sp/>l&apos;etat<sp/>des<sp/>especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>Species_t<sp/>*esp=NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>des<sp/>quantites<sp/>des<sp/>especes*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbEspeces;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp<sp/>=<sp/>Model_getSpecies(mod,<sp/>i);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="especes_8c_1a4ca513fe43dc3919cab3044166d9f9fb" kindref="member" tooltip="Save data on one molecule.">Especes_save</ref>(molecules,<sp/>i,<sp/>Species_getInitialAmount(esp),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Species_getId(esp));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="simulation_8h_1acc2b5d50969ffb4eac4e86227f583b39" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a56b2d00e703b09b6c3f52e971517ecb3" kindref="member" tooltip="Determine if the reaction is study.">SBML_findReaction</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**reaction,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*react,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_reaction)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>si<sp/>la<sp/>reation<sp/>indique<sp/>est<sp/>etudiee<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;nb_reaction;i++){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>La<sp/>reaction<sp/>est<sp/>etudiee,<sp/>on<sp/>retourne<sp/>son<sp/>numero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(reaction[i],<sp/>react))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>La<sp/>reaction<sp/>n&apos;est<sp/>pas<sp/>etudiee<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="simulation_8h_1a97ee89b0e47e49cdcf5579255b8cd3a3" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a2aee345900876fe3c6888dfc620265b0" kindref="member" tooltip="Get the reaction ratio define in the sbml.">SBML_evalExpression</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*formule)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Caste<sp/>la<sp/>formule<sp/>en<sp/>double<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atof(formule);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="simulation_8h_1a4e69a993d7460adf46b17909e8991565" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a744147acf49de269630c456d0c5f4247" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_setReactions</ref>(Model_t<sp/>*mod,<sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules,<sp/><ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/>result,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*reactions_ratio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbReactions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspeces)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>les<sp/>reactions<sp/>auquelles<sp/>participent<sp/>chaque<sp/>espece<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref<sp/>=<sp/>0,<sp/>i,<sp/>j,<sp/>resultat=<ref refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>SpeciesReference_t<sp/>*reactif=NULL;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>Species_t<sp/>*especeId=NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>Reaction_t<sp/>*react=NULL;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kf=NULL;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*const<sp/>ASTNode_t<sp/>*km;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>KineticLaw_t<sp/>*kl=NULL;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recherche<sp/>les<sp/>reactions<sp/>ou<sp/>apparaissent<sp/>chaque<sp/>espece<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbReactions;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>react<sp/>=<sp/>Model_getReaction(mod,<sp/>i);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recherche<sp/>si<sp/>la<sp/>reaction<sp/>est<sp/>etudiee<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resultat<sp/>=<sp/><ref refid="simulation_8c_1a56b2d00e703b09b6c3f52e971517ecb3" kindref="member" tooltip="Determine if the reaction is study.">SBML_findReaction</ref>(result-&gt;<ref refid="structScore_1af8245823c6e659cee49999dd3452a301" kindref="member">reaction</ref>,Reaction_getId(react),<sp/>result-&gt;<ref refid="structScore_1a9676111bf63c8d420921fe1c9187670d" kindref="member">nb_reaction</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Etude<sp/>des<sp/>reactifs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>(int)Reaction_getNumReactants(react);<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recuperation<sp/>d&apos;un<sp/>reactif<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reactif<sp/>=<sp/>Reaction_getReactant(react,<sp/>j);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recuperation<sp/>du<sp/>nom<sp/>de<sp/>l&apos;espece<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>especeId<sp/>=<sp/>Model_getSpeciesById(mod,<sp/>SpeciesReference_getSpecies(reactif));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recherche<sp/>la<sp/>reference<sp/>de<sp/>cette<sp/>molecule<sp/>dans<sp/>la<sp/>struture<sp/>molecule<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/><ref refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" kindref="member" tooltip="Find a molecule thank to it ID.">Especes_find</ref>(molecules,<sp/>Species_getId(especeId),<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recuperation<sp/>de<sp/>la<sp/>loi<sp/>cinetique<sp/>sur<sp/>la<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kl<sp/>=<sp/>Reaction_getKineticLaw(react);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reaction<sp/>dont<sp/>on<sp/>recherche<sp/>le<sp/>bon<sp/>ratio<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(resultat!=<ref refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" kindref="member">OK</ref>){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="especes_8c_1ab485f86ce621d4a8aaec5d1bc78f6105" kindref="member" tooltip="Alloc memory and initialize the struct Reaction for each molecule.">Especes_allocReactions</ref>(molecules,<sp/>ref,<sp/>react,<sp/>reactions_ratio[resultat]);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Si<sp/>la<sp/>loi<sp/>cinetique<sp/>est<sp/>au<sp/>format<sp/>:<sp/>formule<sp/>on<sp/>recupere<sp/>le<sp/>ratio<sp/>en<sp/>question<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(KineticLaw_isSetFormula(kl))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kf<sp/>=<sp/>KineticLaw_getFormula(kl);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="especes_8c_1ab485f86ce621d4a8aaec5d1bc78f6105" kindref="member" tooltip="Alloc memory and initialize the struct Reaction for each molecule.">Especes_allocReactions</ref>(molecules,<sp/>ref,<sp/>react,<sp/><ref refid="simulation_8c_1a2aee345900876fe3c6888dfc620265b0" kindref="member" tooltip="Get the reaction ratio define in the sbml.">SBML_evalExpression</ref>(kf));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Sinon<sp/>on<sp/>n&apos;utilise<sp/>pas<sp/>ces<sp/>informations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*km<sp/>=<sp/>KineticLaw_getMath(kl);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Les<sp/>equations<sp/>integrees<sp/>au<sp/>SBML<sp/>ne<sp/>sont<sp/>pas<sp/>integrees,<sp/>utilisez<sp/>plutot<sp/>le<sp/>fichier<sp/>de<sp/>parametre<sp/>pour<sp/>cela\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*exit(EXIT_FAILURE);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="simulation_8h_1a29d1d4fcf0dcc060769bf71e4e451b15" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a5630aef6f927ffef62f6535977ae8200" kindref="member" tooltip="Determine the number of reaction for one molecule.">SBML_checkQuantite</ref>(Model_t<sp/>*mod,<sp/>Reaction_t<sp/>*react,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspeces,<sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>le<sp/>nombre<sp/>de<sp/>reaction<sp/>possible<sp/>a<sp/>partir<sp/>de<sp/>la<sp/>quantite<sp/>des<sp/>reactifs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ref<sp/>=<sp/>0,<sp/>i;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>quantite<sp/>=<sp/>0.0,<sp/>minStep<sp/>=<sp/>0.0,<sp/>temp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>SpeciesReference_t<sp/>*reactif;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>Species_t<sp/>*especeId;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>Il<sp/>est<sp/>possible<sp/>de<sp/>reprogrammer<sp/>ca<sp/>plus<sp/>proprement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recupere<sp/>la<sp/>quantite<sp/>de<sp/>la<sp/>premiere<sp/>molecule<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>reactif<sp/>=<sp/>Reaction_getReactant(react,<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>especeId<sp/>=<sp/>Model_getSpeciesById(mod,<sp/>SpeciesReference_getSpecies(reactif));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>ref<sp/>=<sp/><ref refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" kindref="member" tooltip="Find a molecule thank to it ID.">Especes_find</ref>(molecules,<sp/>Species_getId(especeId),<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>ou<sp/>la<sp/>quantite<sp/>de<sp/>la<sp/>molecule<sp/>est<sp/>egale<sp/>a<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((quantite<sp/>=<sp/><ref refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" kindref="member" tooltip="Get the quanty of one molecule by its number.">Especes_getQuantite</ref>(molecules,<sp/>ref))<sp/>&lt;=<sp/>0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calcul<sp/>du<sp/>nombre<sp/>de<sp/>pas<sp/>minimum<sp/>qu&apos;il<sp/>sera<sp/>possible<sp/>d&apos;effectuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>C&apos;est<sp/>le<sp/>nombre<sp/>minimum<sp/>d&apos;etat<sp/>de<sp/>tous<sp/>les<sp/>reactifs<sp/>qui<sp/>determine<sp/>le<sp/>nombre<sp/>de<sp/>pas<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>minStep<sp/>=<sp/>floor(quantite<sp/>/<sp/>SpeciesReference_getStoichiometry(reactif));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>ou<sp/>le<sp/>nombre<sp/>de<sp/>pas<sp/>est<sp/>egal<sp/>a<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(minStep==0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>calcule<sp/>pour<sp/>les<sp/>autres<sp/>reactifs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>(int)Reaction_getNumReactants(react);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recupere<sp/>la<sp/>quantite<sp/>d&apos;une<sp/>molecule<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reactif<sp/>=<sp/>Reaction_getReactant(react,<sp/>i);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>especeId<sp/>=<sp/>Model_getSpeciesById(mod,<sp/>SpeciesReference_getSpecies(reactif));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/><ref refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" kindref="member" tooltip="Find a molecule thank to it ID.">Especes_find</ref>(molecules,<sp/>Species_getId(especeId),<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quantite=<sp/><ref refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" kindref="member" tooltip="Get the quanty of one molecule by its number.">Especes_getQuantite</ref>(molecules,<sp/>ref);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>La<sp/>quantite<sp/>est<sp/>egale<sp/>a<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(quantite&lt;=0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>calcule<sp/>le<sp/>nombre<sp/>de<sp/>pas<sp/>minimum<sp/>qu&apos;il<sp/>sera<sp/>possible<sp/>d&apos;effectuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>floor(<ref refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" kindref="member" tooltip="Get the quanty of one molecule by its number.">Especes_getQuantite</ref>(molecules,<sp/>ref)/SpeciesReference_getStoichiometry(reactif));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>ou<sp/>le<sp/>nombre<sp/>de<sp/>pas<sp/>est<sp/>egal<sp/>a<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp==0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Si<sp/>le<sp/>nouveau<sp/>nombre<sp/>est<sp/>inferieur<sp/>au<sp/>precedent,<sp/>on<sp/>change<sp/>la<sp/>valeur<sp/>de<sp/>minStep<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minStep<sp/>&gt;<sp/>temp)<sp/>minStep<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)minStep;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="simulation_8h_1a8d9458c6636b5b95598434453ad6e3dd" refkind="member"><highlight class="normal">Reaction_t<sp/>*<sp/><ref refid="simulation_8c_1ac9187b648cc6e8a588813ab31c12193f" kindref="member" tooltip="Determine randomly the reaction to achieve for several nodes reactions.">SBML_reactChoice</ref>(<ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_rng<sp/>*<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>aleatoirement<sp/>la<sp/>reaction<sp/>a<sp/>realiser<sp/>pour<sp/>les<sp/>noeuds<sp/>de<sp/>plusieurs<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="structReaction" kindref="compound" tooltip="Reactions data.">pReaction</ref><sp/>temp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="structReaction" kindref="compound" tooltip="Reactions data.">pReaction</ref><sp/>Q<sp/>=<sp/>molecules[ref].<ref refid="structEspeces_1a61d949a99599938950d1508d7cb86d4d" kindref="member">system</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>gsl_rng_uniform(r)<sp/>*<sp/>100.0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>choice<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Si<sp/>la<sp/>valeur<sp/>choisie<sp/>est<sp/>inferieure<sp/>au<sp/>ratio<sp/>alloue<sp/>a<sp/>la<sp/>premiere<sp/>reaction<sp/>du<sp/>noeud<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value&lt;Q-&gt;ratio)<sp/>temp=Q;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>ou<sp/>il<sp/>faut<sp/>ajouter<sp/>les<sp/>ratio<sp/>des<sp/>autres<sp/>reactions<sp/>du<sp/>noeud<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice<sp/>+=<sp/>Q-&gt;<ref refid="structReaction_1a8f0edc9c1a0652917a5a18d3e9fe931a" kindref="member">ratio</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>=<sp/>Q-&gt;<ref refid="structReaction_1ae0a12022d2d1cda2fe244b08a59be3d0" kindref="member">suivant</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp=Q;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Q-&gt;<ref refid="structReaction_1ae0a12022d2d1cda2fe244b08a59be3d0" kindref="member">suivant</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>value<sp/>&lt;=<sp/>(choice<sp/>+<sp/>Q-&gt;<ref refid="structReaction_1ae0a12022d2d1cda2fe244b08a59be3d0" kindref="member">suivant</ref>-&gt;<ref refid="structReaction_1a8f0edc9c1a0652917a5a18d3e9fe931a" kindref="member">ratio</ref>)<sp/>&amp;&amp;<sp/>value<sp/>&gt;<sp/>choice);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temp<sp/>n&apos;indique<sp/>aucune<sp/>reaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp==NULL){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Il<sp/>existe<sp/>un<sp/>probleme<sp/>au<sp/>niveau<sp/>des<sp/>ratio\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>retourne<sp/>la<sp/>reaction<sp/>choisie<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(temp-&gt;<ref refid="structReaction_1ac0afd1990830008577958aec1d974e5d" kindref="member">link</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="simulation_8h_1a0421946146569268a97c95c27e57a65e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a463648eb9010400731a5ffc3a13e56dd" kindref="member" tooltip="Simulation of a discrete transision.">SBML_reaction</ref>(Model_t<sp/>*mod,<sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules,<sp/>Reaction_t<sp/>*react,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspeces)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simulation<sp/>d&apos;une<sp/>transision<sp/>discrete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>SpeciesReference_t<sp/>*reactif;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>Species_t<sp/>*especeId;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>ref<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*boucle<sp/>pour<sp/>retirer<sp/>des<sp/>reactifs*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)Reaction_getNumReactants(react);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Indentification<sp/>du<sp/>reactif<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reactif<sp/>=<sp/>Reaction_getReactant(react,<sp/>i);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>especeId<sp/>=<sp/>Model_getSpeciesById(mod,<sp/>SpeciesReference_getSpecies(reactif));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/><ref refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" kindref="member" tooltip="Find a molecule thank to it ID.">Especes_find</ref>(molecules,<sp/>Species_getId(especeId),<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Modification<sp/>de<sp/>sa<sp/>quantite<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="especes_8c_1a673f93f68d9ea2b84db4a73c2f4f5b39" kindref="member" tooltip="Change the quantity of a molecule.">Especes_setQuantite</ref>(molecules,<sp/>ref,<sp/>(<ref refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" kindref="member" tooltip="Get the quanty of one molecule by its number.">Especes_getQuantite</ref>(molecules,<sp/>ref)-<sp/>SpeciesReference_getStoichiometry(reactif)));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*boucle<sp/>pour<sp/>ajouter<sp/>des<sp/>produits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)Reaction_getNumProducts(react);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Indentification<sp/>du<sp/>reactif<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reactif<sp/>=<sp/>Reaction_getProduct(react,<sp/>i);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>especeId<sp/>=<sp/>Model_getSpeciesById(mod,<sp/>SpeciesReference_getSpecies(reactif));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/><ref refid="especes_8c_1a1749f688ebd8c3ffb4f6c16e5093e351" kindref="member" tooltip="Find a molecule thank to it ID.">Especes_find</ref>(molecules,<sp/>Species_getId(especeId),<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Modification<sp/>de<sp/>sa<sp/>quantite<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="especes_8c_1a673f93f68d9ea2b84db4a73c2f4f5b39" kindref="member" tooltip="Change the quantity of a molecule.">Especes_setQuantite</ref>(molecules,<sp/>ref,<sp/>(<ref refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" kindref="member" tooltip="Get the quanty of one molecule by its number.">Especes_getQuantite</ref>(molecules,<sp/>ref)+<sp/>SpeciesReference_getStoichiometry(reactif)));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="simulation_8h_1abb6b027abfcddf0b783bdb3bc29e47d8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a11e6f95793902cf6d16dcd127d09ab7a" kindref="member" tooltip="Alloc memory and initialize the struct pTestReaction.">SBML_allocTest</ref>(<ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">pTestReaction</ref><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbReactions)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Alloue<sp/>la<sp/>memoire<sp/>necessaire<sp/>a<sp/>la<sp/>struture<sp/>de<sp/>test<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>des<sp/>tableaux<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>T-&gt;<ref refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" kindref="member">tabReactions</ref><sp/>=<sp/>(Reaction_t<sp/>**)<sp/>malloc(nbReactions<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Reaction_t<sp/>*));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>malloc(nbReactions<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>assert(T-&gt;<ref refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" kindref="member">tabReactions</ref>!=NULL);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>assert(T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>!=NULL);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbReactions;<sp/>i++){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T-&gt;<ref refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" kindref="member">tabReactions</ref>[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>[i]=0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="simulation_8h_1a9103674f503bec1df341d62554e1a9c2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a583a492a3d9db3c0f15b581f9762e85b" kindref="member" tooltip="Free memory of the struct TestReaction.">SBML_freeTest</ref>(<ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">pTestReaction</ref><sp/>T)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Libere<sp/>la<sp/>memoire<sp/>allouee<sp/>a<sp/>la<sp/>struture<sp/>de<sp/>test<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(T-&gt;<ref refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" kindref="member">tabReactions</ref>!=NULL)<sp/>free(T-&gt;<ref refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" kindref="member">tabReactions</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>!=NULL)<sp/>free(T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="simulation_8h_1a5e7dd721fd4e49d51adaa2dd290879d4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a26a3a6e92c8b51177e1e2c42c20fec30" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_EstimationReaction</ref>(Model_t<sp/>*mod,<sp/><ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">pTestReaction</ref><sp/>T,<sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspeces)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="structReaction" kindref="compound" tooltip="Reactions data.">pReaction</ref><sp/>Q<sp/>=<sp/>molecules[ref].<ref refid="structEspeces_1a61d949a99599938950d1508d7cb86d4d" kindref="member">system</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,<sp/>min=0,<sp/>curr=0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compte<sp/>le<sp/>nombre<sp/>de<sp/>reactions<sp/>rattachees<sp/>a<sp/>une<sp/>espece<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Q!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T-&gt;<ref refid="structTestReaction_1abc440bf3f3edc3d4ca6ad896962ffad2" kindref="member">tabReactions</ref>[i]=Q-&gt;<ref refid="structReaction_1ac0afd1990830008577958aec1d974e5d" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>[i]=<ref refid="simulation_8c_1a5630aef6f927ffef62f6535977ae8200" kindref="member" tooltip="Determine the number of reaction for one molecule.">SBML_checkQuantite</ref>(mod,<sp/>Q-&gt;<ref refid="structReaction_1ac0afd1990830008577958aec1d974e5d" kindref="member">link</ref>,<sp/>nbEspeces,<sp/>molecules);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0)<sp/>min=T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>[i];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curr=T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>[i];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(T-&gt;<ref refid="structTestReaction_1a04037c90652dceaab2f416e099be460c" kindref="member">minStepTab</ref>[i]&lt;=0)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(curr&lt;min)<sp/>min=curr;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>=<sp/>Q-&gt;<ref refid="structReaction_1ae0a12022d2d1cda2fe244b08a59be3d0" kindref="member">suivant</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nombre<sp/>d&apos;etape<sp/>realisable<sp/>par<sp/>reaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="simulation_8h_1a79f018dd624b1b4a2ee36a2cb2939462" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a36a9d2b343c5fcf0f4d88e5720fb86ce" kindref="member" tooltip="Simulate one step of petri net.">SBML_simulate</ref>(Model_t<sp/>*mod,<sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gsl_rng<sp/>*<sp/>r,<sp/><ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">pTestReaction</ref><sp/>T,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**banned,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbBanned,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspeces,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>Reaction_t<sp/>*react=NULL;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>minStep<sp/>=<sp/>0,<sp/>valid=0,<sp/>nbReactions<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Probleme<sp/>ATP,<sp/>ADP,<sp/>NADH,<sp/>NAD+<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;nbBanned;i++){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(molecules[ref].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,banned[i]))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decompte<sp/>du<sp/>nombre<sp/>de<sp/>reaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>nbReactions<sp/>=<sp/><ref refid="especes_8c_1a3391146ab0a83b7db9cbe3bdaec9fdab" kindref="member" tooltip="Get number of reaction where one molecule is used (like a reactif)">Especes_getNbreactions</ref>(molecules,<sp/>ref);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Variation<sp/>selon<sp/>le<sp/>cas.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(nbReactions)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>ou<sp/>aucune<sp/>reaction<sp/>n&apos;est<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>ou<sp/>une<sp/>seule<sp/>reaction<sp/>est<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>react<sp/>=<sp/>molecules[ref].<ref refid="structEspeces_1a61d949a99599938950d1508d7cb86d4d" kindref="member">system</ref>-&gt;<ref refid="structReaction_1ac0afd1990830008577958aec1d974e5d" kindref="member">link</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((minStep<sp/>=<sp/><ref refid="simulation_8c_1a5630aef6f927ffef62f6535977ae8200" kindref="member" tooltip="Determine the number of reaction for one molecule.">SBML_checkQuantite</ref>(mod,<sp/>react,<sp/>nbEspeces,<sp/>molecules))&lt;=<sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tant<sp/>qu&apos;il<sp/>reste<sp/>des<sp/>molecules,<sp/>on<sp/>realise<sp/>la<sp/>reaction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(minStep<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1a463648eb9010400731a5ffc3a13e56dd" kindref="member" tooltip="Simulation of a discrete transision.">SBML_reaction</ref>(mod,<sp/>molecules,<sp/><sp/>react,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minStep--;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cas<sp/>ou<sp/><sp/>plusieurs<sp/>reactions<sp/>sont<sp/>possibles*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocation<sp/>de<sp/>la<sp/>memoire<sp/>au<sp/>tableau<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1a11e6f95793902cf6d16dcd127d09ab7a" kindref="member" tooltip="Alloc memory and initialize the struct pTestReaction.">SBML_allocTest</ref>(T,<sp/>nbReactions);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Estimation<sp/>du<sp/>nombre<sp/>de<sp/>reaction<sp/>realisable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>valid<sp/>=<sp/><ref refid="simulation_8c_1a26a3a6e92c8b51177e1e2c42c20fec30" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_EstimationReaction</ref>(mod,<sp/>T,<sp/>molecules,<sp/>ref,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Il<sp/>n&apos;y<sp/>a<sp/>plus<sp/>de<sp/>reactions<sp/>realisables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(valid&lt;=<ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1a583a492a3d9db3c0f15b581f9762e85b" kindref="member" tooltip="Free memory of the struct TestReaction.">SBML_freeTest</ref>(T);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>realise<sp/>les<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="especes_8c_1a95287ee5ed282bd8842d2456b6c5a220" kindref="member" tooltip="Get the quanty of one molecule by its number.">Especes_getQuantite</ref>(molecules,<sp/>ref)&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>valid&gt;<ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>react<sp/>=<sp/><ref refid="simulation_8c_1ac9187b648cc6e8a588813ab31c12193f" kindref="member" tooltip="Determine randomly the reaction to achieve for several nodes reactions.">SBML_reactChoice</ref>(molecules,<sp/>r,<sp/>ref);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1a463648eb9010400731a5ffc3a13e56dd" kindref="member" tooltip="Simulation of a discrete transision.">SBML_reaction</ref>(mod,<sp/>molecules,<sp/><sp/>react,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid--;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Liberation<sp/>de<sp/>la<sp/>memoire<sp/>allouee<sp/>au<sp/>tableau<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1a583a492a3d9db3c0f15b581f9762e85b" kindref="member" tooltip="Free memory of the struct TestReaction.">SBML_freeTest</ref>(T);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="simulation_8h_1adfc3b19ea6cbce6f7cb2c54d16184974" kindref="member">PURSUE</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="simulation_8h_1a0b14dd5a1a8cf318c2f7974bd9a8cc1c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1ad857fd679e78b0081d6c6898f6a51f52" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_score</ref>(Model_t<sp/>*mod,<sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules,<sp/><ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/>result,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*reactions_ratio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbReactions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspeces)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fonction<sp/>de<sp/>score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>i,<sp/>resultat=<ref refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>Reaction_t<sp/>*react=NULL;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kf=NULL;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>KineticLaw_t<sp/>*kl=NULL;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enregistre<sp/>le<sp/>score<sp/>des<sp/>especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><ref refid="especes_8c_1a13dfbbe353cc238a9f53e5a183904fa4" kindref="member" tooltip="Save the quantite of all molecules for scoring.">Especes_scoreSpecies</ref>(molecules,<sp/>nbEspeces,<sp/>result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>,<sp/>result-&gt;<ref refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" kindref="member">quantite</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enregistre<sp/>le<sp/>ratio<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(nbReactions);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>react<sp/>=<sp/>Model_getReaction(mod,<sp/>i);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[nbEspeces+i]==NULL){</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[nbEspeces+i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)Reaction_getId(react))+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[nbEspeces+i]!=NULL);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[nbEspeces+i],(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)Reaction_getId(react));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recherche<sp/>si<sp/>la<sp/>reaction<sp/>est<sp/>etudiee*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resultat<sp/>=<sp/><ref refid="simulation_8c_1a56b2d00e703b09b6c3f52e971517ecb3" kindref="member" tooltip="Determine if the reaction is study.">SBML_findReaction</ref>(result-&gt;<ref refid="structScore_1af8245823c6e659cee49999dd3452a301" kindref="member">reaction</ref>,<sp/>result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[nbEspeces+i],<sp/>result-&gt;<ref refid="structScore_1a9676111bf63c8d420921fe1c9187670d" kindref="member">nb_reaction</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recuperation<sp/>de<sp/>la<sp/>loi<sp/>cinetique<sp/>sur<sp/>la<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kl<sp/>=<sp/>Reaction_getKineticLaw(react);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reaction<sp/>dont<sp/>on<sp/>recherche<sp/>le<sp/>bon<sp/>ratio*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(resultat!=<ref refid="simulation_8h_1aba51915c87d64af47fb1cc59348961c9" kindref="member">OK</ref>)<sp/>result-&gt;<ref refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" kindref="member">quantite</ref>[nbEspeces+i]=reactions_ratio[resultat];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(KineticLaw_isSetFormula(kl)){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kf<sp/>=<sp/>KineticLaw_getFormula(kl);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" kindref="member">quantite</ref>[nbEspeces+i]=<ref refid="simulation_8c_1a2aee345900876fe3c6888dfc620265b0" kindref="member" tooltip="Get the reaction ratio define in the sbml.">SBML_evalExpression</ref>(kf);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">/*Sinon<sp/>on<sp/>n&apos;utilise<sp/>pas<sp/>ces<sp/>informations*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Les<sp/>equations<sp/>integrees<sp/>au<sp/>SBML<sp/>ne<sp/>sont<sp/>pad<sp/>prise<sp/>en<sp/>charge,<sp/>utilisez<sp/>plutot<sp/>le<sp/>fichier<sp/>de<sp/>parametre<sp/>pour<sp/>cela\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="simulation_8h_1a12fd385702f666987a4b569e84abed70" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a8823ee151e44d0d0b6b977bcebc7463e" kindref="member" tooltip="Print the head of the debug file.">SBML_debugPrintHead</ref>(FILE<sp/>*debugFile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**name)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affichage<sp/>de<sp/>l&apos;entete<sp/>du<sp/>fichier<sp/>debug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;Energy\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;taille;i++){</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;%s\t&quot;</highlight><highlight class="normal">,name[i]);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="simulation_8h_1a69e2b7c32f7b66e66d28030d00917fd7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a792ef36e542159096d4567a125aee565" kindref="member" tooltip="Print the debuf file.">SBML_debugPrint</ref>(FILE<sp/>*debugFile,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleSpecies,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*quantite,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affiche<sp/>tous<sp/>les<sp/>resultats<sp/>de<sp/>toutes<sp/>les<sp/>simulations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affichage<sp/>de<sp/>l&apos;energie<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result!=-1.0)<sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;%.3f\t&quot;</highlight><highlight class="normal">,result);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;NAN\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affichage<sp/>des<sp/>quantites<sp/>et<sp/>ratios<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;tailleSpecies;i++){</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;%.0f\t&quot;</highlight><highlight class="normal">,quantite[i]);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=tailleSpecies;i&lt;taille;i++){</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;%.2f\t&quot;</highlight><highlight class="normal">,quantite[i]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>fprintf(debugFile,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="simulation_8h_1a443eccd5296f1a2844c4d97e514a61c5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a0eb4dda20b3a9cc639f50421f919f24e" kindref="member" tooltip="Simulation of metabolic network.">SBML_compute_simulation</ref>(<ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/>result,<sp/>Model_t<sp/>*mod,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*reactions_ratio,<sp/>gsl_rng<sp/>*<sp/>r,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**banned,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbBanned)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simulation<sp/>du<sp/>reseau<sp/>metabolique<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>temp<sp/>=<sp/>1,<sp/>tempo=0;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules=NULL;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">pTestReaction</ref><sp/>TR=NULL;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocation<sp/>memoire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>TR=(<ref refid="simulation_8h_1ac810b29a03b8ad09c8483e56969e4a76" kindref="member">pTestReaction</ref>)malloc(1*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">TestReaction</ref>));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>assert(TR!=NULL);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>molecules<sp/>=<sp/><ref refid="especes_8c_1ad40ac9cd39a9c9b70657f8e87209bc4d" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">Especes_alloc</ref>(result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>de<sp/>la<sp/>quantite<sp/>des<sp/>especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="simulation_8c_1ab96386e57e0e58e356974d26ced8eeb2" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_initEspeceAmounts</ref>(mod,<sp/>molecules,<sp/>result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>des<sp/>reactions<sp/>et<sp/>des<sp/>ratios*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="simulation_8c_1a744147acf49de269630c456d0c5f4247" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_setReactions</ref>(mod,<sp/>molecules,<sp/>result,<sp/>reactions_ratio,<sp/>result-&gt;<ref refid="structScore_1a103843cc09238d77051b5a6ca4e48173" kindref="member">tailleReactions</ref>,<sp/>result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simulation<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo=<sp/><ref refid="simulation_8c_1a36a9d2b343c5fcf0f4d88e5720fb86ce" kindref="member" tooltip="Simulate one step of petri net.">SBML_simulate</ref>(mod,<sp/>molecules,<sp/>r,<sp/>TR,<sp/>banned,<sp/>nbBanned,<sp/>result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=tempo;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><ref refid="simulation_8c_1ad857fd679e78b0081d6c6898f6a51f52" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_score</ref>(mod,<sp/>molecules,<sp/>result,<sp/>reactions_ratio,<sp/>result-&gt;<ref refid="structScore_1a103843cc09238d77051b5a6ca4e48173" kindref="member">tailleReactions</ref>,<sp/>result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Liberation<sp/>de<sp/>la<sp/>memoire<sp/>de<sp/>la<sp/>structure<sp/>Especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><ref refid="especes_8c_1aa4c9945c5a0484f255ebe9ae6e1e7d30" kindref="member" tooltip="Free the struct pEspeces.">Especes_free</ref>(molecules,<sp/>result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(TR!=NULL)<sp/>free(TR);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="simulation_8h_1a97ba6b434d34399d17103fbb366afd74" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1a4055d968d7db6b8f18d71f607a0d20d7" kindref="member" tooltip="Add scores.">SBML_score_add</ref>(<ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/>result,<sp/><ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/><ref refid="gsl__min_8c_1a79d4654ca6c35ca2cca99cc3f3046276" kindref="member">result_temp</ref>,<sp/>FILE<sp/>*debugFile)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Addition<sp/>des<sp/>scores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>choice=0;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>si<sp/>l&apos;entete<sp/>doit<sp/>etre<sp/>imprime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[0]==NULL)<sp/>choice=1;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affichage<sp/>de<sp/>l&apos;entete<sp/>du<sp/>fichier<sp/>debug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debugFile!=NULL<sp/>&amp;&amp;<sp/>choice)<sp/><ref refid="simulation_8c_1a8823ee151e44d0d0b6b977bcebc7463e" kindref="member" tooltip="Print the head of the debug file.">SBML_debugPrintHead</ref>(debugFile,<sp/>result_temp-&gt;<ref refid="structScore_1aee1e19fc90d330de6fced582dff7102c" kindref="member">taille</ref>,<sp/>result_temp-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copie<sp/>des<sp/>resultats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;result-&gt;<ref refid="structScore_1aee1e19fc90d330de6fced582dff7102c" kindref="member">taille</ref>;i++){</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[i]==NULL){</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(result_temp-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[i])+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[i]!=NULL);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(result-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[i],<sp/>result_temp-&gt;<ref refid="structScore_1a29547e98673d89a8964a747015b2c26c" kindref="member">name</ref>[i]);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" kindref="member">quantite</ref>[i]+=result_temp-&gt;<ref refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" kindref="member">quantite</ref>[i];</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affichage<sp/>des<sp/>donnees<sp/>debug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debugFile!=NULL)<sp/><ref refid="simulation_8c_1a792ef36e542159096d4567a125aee565" kindref="member" tooltip="Print the debuf file.">SBML_debugPrint</ref>(debugFile,result-&gt;<ref refid="structScore_1ac5a5af5f70e341fb42ea765394d86207" kindref="member">tailleSpecies</ref>,<sp/>result-&gt;<ref refid="structScore_1aee1e19fc90d330de6fced582dff7102c" kindref="member">taille</ref>,<sp/>result_temp-&gt;<ref refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" kindref="member">quantite</ref>,<sp/>-1.0);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="simulation_8h_1a785b8432d885cc9e8ef50413c3643f6a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1ad331b2a26934ff926772cf4329c4e359" kindref="member" tooltip="Mean quantities for score.">SBML_score_mean</ref>(<ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/>result,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Moyenne<sp/>des<sp/>resultats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;result-&gt;<ref refid="structScore_1aee1e19fc90d330de6fced582dff7102c" kindref="member">taille</ref>;i++){</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structScore_1aadd3a70f5dc0018739a48ff13cb9fa2d" kindref="member">quantite</ref>[i]/=n;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="simulation_8h_1a16b0c1105bbcfc7ddc9a9e044d567ed5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="simulation_8c_1aeef27fa70d7f408e820193ef0a2c5496" kindref="member" tooltip="X time simulation of metabolic network.">SBML_compute_simulation_mean</ref>(FILE<sp/>*debugFile,<sp/><ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/>result,<sp/><ref refid="structScore" kindref="compound" tooltip="Structure containing all information from simulations.">pScore</ref><sp/><ref refid="gsl__min_8c_1a79d4654ca6c35ca2cca99cc3f3046276" kindref="member">result_temp</ref>,<sp/>Model_t<sp/>*mod,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*reactions_ratio,<sp/>gsl_rng<sp/>*<sp/>r,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**banned,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbBanned,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_simulation)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simulation<sp/>du<sp/>reseau<sp/>metabolique<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,nbReactions<sp/>=<sp/>0,<sp/>nbEspeces<sp/>=<sp/>0,<sp/>temp<sp/>=<sp/>1,<sp/>tempo=0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><ref refid="structEspeces" kindref="compound" tooltip="Molecules data.">pEspeces</ref><sp/>molecules=NULL;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">pTestReaction</ref><sp/>TR=NULL;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocation<sp/>memoire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>TR=(<ref refid="simulation_8h_1ac810b29a03b8ad09c8483e56969e4a76" kindref="member">pTestReaction</ref>)malloc(1*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structTestReaction" kindref="compound" tooltip="Structure used to test reactions.">TestReaction</ref>));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>assert(TR!=NULL);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>nbReactions<sp/>=<sp/>(int)<sp/>Model_getNumReactions(mod);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>nbEspeces<sp/>=<sp/>(int)Model_getNumSpecies(mod);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>molecules<sp/>=<sp/><ref refid="especes_8c_1ad40ac9cd39a9c9b70657f8e87209bc4d" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">Especes_alloc</ref>(nbEspeces);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>de<sp/>la<sp/>quantite<sp/>des<sp/>especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><ref refid="simulation_8c_1ab96386e57e0e58e356974d26ced8eeb2" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_initEspeceAmounts</ref>(mod,<sp/>molecules,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>des<sp/>reactions<sp/>et<sp/>des<sp/>ratios*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><ref refid="simulation_8c_1a744147acf49de269630c456d0c5f4247" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_setReactions</ref>(mod,<sp/>molecules,<sp/>result_temp,<sp/>reactions_ratio,<sp/>nbReactions,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SIMULATION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;nb_simulation;j++){</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simulation<sp/>des<sp/>reactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/><ref refid="simulation_8h_1a29fd18bed01c4d836c7ebfe73a125c3f" kindref="member">END</ref>)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbEspeces;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo=<sp/><ref refid="simulation_8c_1a36a9d2b343c5fcf0f4d88e5720fb86ce" kindref="member" tooltip="Simulate one step of petri net.">SBML_simulate</ref>(mod,<sp/>molecules,<sp/>r,<sp/>TR,<sp/><sp/>banned,<sp/>nbBanned,<sp/>nbEspeces,<sp/>i);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=tempo;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp=1;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempo=0;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Score<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1ad857fd679e78b0081d6c6898f6a51f52" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_score</ref>(mod,<sp/>molecules,<sp/>result_temp,<sp/>reactions_ratio,<sp/>nbReactions,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1a4055d968d7db6b8f18d71f607a0d20d7" kindref="member" tooltip="Add scores.">SBML_score_add</ref>(result,result_temp,debugFile);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="simulation_8c_1ab96386e57e0e58e356974d26ced8eeb2" kindref="member" tooltip="Alloc memory and initialize the struct Especes.">SBML_initEspeceAmounts</ref>(mod,<sp/>molecules,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="simulation_8c_1ad331b2a26934ff926772cf4329c4e359" kindref="member" tooltip="Mean quantities for score.">SBML_score_mean</ref>(result,nb_simulation);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Liberation<sp/>de<sp/>la<sp/>memoire<sp/>de<sp/>la<sp/>structure<sp/>Especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="especes_8c_1aa4c9945c5a0484f255ebe9ae6e1e7d30" kindref="member" tooltip="Free the struct pEspeces.">Especes_free</ref>(molecules,<sp/>nbEspeces);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(TR!=NULL)<sp/>free(TR);</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/simulation.c"/>
  </compounddef>
</doxygen>
