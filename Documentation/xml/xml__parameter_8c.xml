<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="xml__parameter_8c" kind="file">
    <compoundname>xml_parameter.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">libxml/parser.h</includes>
    <includes local="no">libxml/xpath.h</includes>
    <includes refid="xml__parameter_8h" local="yes">xml_parameter.h</includes>
    <incdepgraph>
      <node id="565">
        <label>assert.h</label>
      </node>
      <node id="561">
        <label>metaboflux/src/xml_parameter.c</label>
        <link refid="xml_parameter.c"/>
        <childnode refid="562" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
      </node>
      <node id="563">
        <label>stdlib.h</label>
      </node>
      <node id="566">
        <label>libxml/parser.h</label>
      </node>
      <node id="564">
        <label>string.h</label>
      </node>
      <node id="567">
        <label>libxml/xpath.h</label>
      </node>
      <node id="562">
        <label>stdio.h</label>
      </node>
      <node id="568">
        <label>xml_parameter.h</label>
        <link refid="xml__parameter_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="xml__parameter_8c_1a369266c24eacffb87046522897a570d5" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="26" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xml__parameter_8c_1ab12b2036f57ce74c1c2ac44a19434bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
        <definition>xmlConfig_t * Xml_loadConfig</definition>
        <argsstring>(char *fichier)</argsstring>
        <name>Xml_loadConfig</name>
        <param>
          <type>char *</type>
          <declname>fichier</declname>
        </param>
        <briefdescription>
<para>Initialize and load the parameter.xml. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fichier</parametername>
</parameternamelist>
<parameterdescription>
<para>Xml file name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="43" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="42" bodyend="89"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <references refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" compoundref="xml__parameter_8h" startline="35">xmlConfig_t::doc</references>
        <references refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" compoundref="xml__parameter_8h" startline="34">xmlConfig_t::fichier</references>
        <references refid="structxmlConfig__t_1a535cd8a3e33d4ae2a00ab29f32a442ff" compoundref="xml__parameter_8h" startline="36">xmlConfig_t::racine</references>
        <references refid="xml__parameter_8c_1a8b93c82fdf9f830d2170f8dfe1e206bd" compoundref="xml__parameter_8c" startline="97" endline="105">Xml_freeConfig</references>
        <referencedby refid="data__parameters_8h_1a6de2ffa5b44477da0d4a2e9e831c0c8a" compoundref="data__parameters_8c" startline="58" endline="71">Data_initXML</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a8b93c82fdf9f830d2170f8dfe1e206bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Xml_freeConfig</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_freeConfig</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Free the Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="98" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="97" bodyend="105"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <references refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" compoundref="xml__parameter_8h" startline="35">xmlConfig_t::doc</references>
        <references refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" compoundref="xml__parameter_8h" startline="34">xmlConfig_t::fichier</references>
        <referencedby refid="data__parameters_8h_1ab08889cc0af85b8a2e8938972107d645" compoundref="data__parameters_8c" startline="463" endline="492">Data_desallocation</referencedby>
        <referencedby refid="xml__parameter_8h_1a4ea94aa6222a68813a163a5c01e160f6" compoundref="xml__parameter_8c" startline="42" endline="89">Xml_loadConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNumber</definition>
        <argsstring>(xmlConfig_t *conf, const char *requete)</argsstring>
        <name>Xml_getNumber</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>requete</declname>
        </param>
        <briefdescription>
<para>Get integer value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requete</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Read integer value in the xml </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="116" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="115" bodyend="143"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <referencedby refid="xml__parameter_8h_1afb1ba7f2d5ce467dc6a3e02219250a6f" compoundref="xml__parameter_8c" startline="279" endline="283">Xml_getNbGroup</referencedby>
        <referencedby refid="xml__parameter_8h_1ab5ca046bc833b5caf81cf482f1b6f162" compoundref="xml__parameter_8c" startline="266" endline="270">Xml_getNbIters</referencedby>
        <referencedby refid="xml__parameter_8h_1a895187a8d4080d24deaf71911b49b865" compoundref="xml__parameter_8c" startline="227" endline="231">Xml_getNbSimulations</referencedby>
        <referencedby refid="xml__parameter_8h_1a61b2b14f1974b2da0977164a0eb7e647" compoundref="xml__parameter_8c" startline="240" endline="244">Xml_getNbTriesMod</referencedby>
        <referencedby refid="xml__parameter_8h_1af202e24f690b234cc2c0a09a065e7de4" compoundref="xml__parameter_8c" startline="253" endline="257">Xml_getNbTriesSa</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Xml_getDoubleNumber</definition>
        <argsstring>(xmlConfig_t *conf, const char *requete)</argsstring>
        <name>Xml_getDoubleNumber</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>requete</declname>
        </param>
        <briefdescription>
<para>Get double value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requete</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Read double value in the xml </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="154" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="153" bodyend="181"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <referencedby refid="xml__parameter_8h_1add80be509519cbdf7e259a17cbc89f59" compoundref="xml__parameter_8c" startline="305" endline="309">Xml_getBoltzmann</referencedby>
        <referencedby refid="xml__parameter_8h_1a18841e8e468959cccb9acbd2dd364997" compoundref="xml__parameter_8c" startline="331" endline="335">Xml_getMuT</referencedby>
        <referencedby refid="xml__parameter_8h_1a7274d52d77ad2ac704e5d1a21cb29b5b" compoundref="xml__parameter_8c" startline="292" endline="296">Xml_getStepSize</referencedby>
        <referencedby refid="xml__parameter_8h_1a5a0bcc251114c768459436767f263df3" compoundref="xml__parameter_8c" startline="318" endline="322">Xml_getTinitial</referencedby>
        <referencedby refid="xml__parameter_8h_1ac2fc806f9a568ba7272a8b1e235ba3e1" compoundref="xml__parameter_8c" startline="344" endline="348">Xml_getTmin</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a2961477293ec8eb23f4b7f2c654932a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * Xml_getString</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getString</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get name value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Read name value in the xml </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="191" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="190" bodyend="218"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <referencedby refid="gsl__recuit_8h_1a50384383f4c2a13a1f7dc85f69339bd6" compoundref="gsl__recuit_8c" startline="184" endline="196">Recuit_redirectionFlux</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a503fd8e4167aef94fa22e0c71a5b6afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbSimulations</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbSimulations</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get number of simulation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of simulation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="228" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="227" bodyend="231"/>
        <references refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" compoundref="xml__parameter_8c" startline="115" endline="143">Xml_getNumber</references>
        <referencedby refid="mpi__load_8h_1a49f24c98f9724a9d2d64bf3b41d7c101" compoundref="mpi__load_8c" startline="154" endline="261">Mpi_master</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1afeff8e3300946c36cea36ddd964e9265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbTriesMod</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbTriesMod</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get number of tries for modelling. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of tries </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="241" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="240" bodyend="244"/>
        <references refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" compoundref="xml__parameter_8c" startline="115" endline="143">Xml_getNumber</references>
        <referencedby refid="data__parameters_8h_1ada6a0c0e47ea4e678bbd615c9371e8af" compoundref="data__parameters_8c" startline="408" endline="433">Data_allocParameters</referencedby>
        <referencedby refid="gsl__mod_8h_1af23349f6e6b94ecae16caf9b7837eb06" compoundref="gsl__mod_8c" startline="109" endline="167">Mod_compute_modeling</referencedby>
        <referencedby refid="mpi__load_8h_1ab4d2e0de3a14f863a405bddfa625b8bd" compoundref="mpi__load_8c" startline="334" endline="346">Mpi_sizeResultTab</referencedby>
        <referencedby refid="gsl__sd_8h_1a3574b473c8bc4f17b1d3921621f78132" compoundref="gsl__sd_8c" startline="106" endline="154">Sd_compute_standard_deviation</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a7b67ce794add8c04563e07f9d25c6096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbTriesSa</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbTriesSa</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get number of tries for the simulated annealing and minimization. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of tries </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="254" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="253" bodyend="257"/>
        <references refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" compoundref="xml__parameter_8c" startline="115" endline="143">Xml_getNumber</references>
        <referencedby refid="data__parameters_8h_1ada6a0c0e47ea4e678bbd615c9371e8af" compoundref="data__parameters_8c" startline="408" endline="433">Data_allocParameters</referencedby>
        <referencedby refid="gsl__min_8h_1ac0cf1b97696b91752884777f11368223" compoundref="gsl__min_8c" startline="149" endline="199">Min_my_f</referencedby>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="gsl__recuit_8h_1a41e47a5713188f196ebc7a66a9052d3d" compoundref="gsl__recuit_8c" startline="279" endline="291">Recuit_printParametre</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1ae49d86627f34fb18c996a3060e2a297a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbIters</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbIters</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get number of iteration. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of iteration </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="267" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="266" bodyend="270"/>
        <references refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" compoundref="xml__parameter_8c" startline="115" endline="143">Xml_getNumber</references>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="gsl__recuit_8h_1a41e47a5713188f196ebc7a66a9052d3d" compoundref="gsl__recuit_8c" startline="279" endline="291">Recuit_printParametre</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1ade93fd888d36e908c7386f25b2836137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbGroup</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbGroup</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get number of group. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of iteration </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="280" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="279" bodyend="283"/>
        <references refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" compoundref="xml__parameter_8c" startline="115" endline="143">Xml_getNumber</references>
        <referencedby refid="mpi__load_8h_1a49f24c98f9724a9d2d64bf3b41d7c101" compoundref="mpi__load_8c" startline="154" endline="261">Mpi_master</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a1770352729facbccf4b8fb288551ebbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Xml_getStepSize</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getStepSize</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the step size. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Step size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="293" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="292" bodyend="296"/>
        <references refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" compoundref="xml__parameter_8c" startline="153" endline="181">Xml_getDoubleNumber</references>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="gsl__recuit_8h_1a41e47a5713188f196ebc7a66a9052d3d" compoundref="gsl__recuit_8c" startline="279" endline="291">Recuit_printParametre</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1af051a5017271240c72cad70ee82b6af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Xml_getBoltzmann</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getBoltzmann</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the Boltzmann value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boltzmann value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="306" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="305" bodyend="309"/>
        <references refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" compoundref="xml__parameter_8c" startline="153" endline="181">Xml_getDoubleNumber</references>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="gsl__recuit_8h_1a41e47a5713188f196ebc7a66a9052d3d" compoundref="gsl__recuit_8c" startline="279" endline="291">Recuit_printParametre</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1ab2406faab9296a45cc596beec457f268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Xml_getTinitial</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getTinitial</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the initial temperature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Initial temperature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="319" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="318" bodyend="322"/>
        <references refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" compoundref="xml__parameter_8c" startline="153" endline="181">Xml_getDoubleNumber</references>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="gsl__recuit_8h_1a41e47a5713188f196ebc7a66a9052d3d" compoundref="gsl__recuit_8c" startline="279" endline="291">Recuit_printParametre</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a9e2c04caf11e5a95f5aa22f6f37f479d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Xml_getMuT</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getMuT</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the variation of temperature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Variation of temperature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="332" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="331" bodyend="335"/>
        <references refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" compoundref="xml__parameter_8c" startline="153" endline="181">Xml_getDoubleNumber</references>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="gsl__recuit_8h_1a41e47a5713188f196ebc7a66a9052d3d" compoundref="gsl__recuit_8c" startline="279" endline="291">Recuit_printParametre</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a9401fbdd3c314c0e729c9a278a6e2805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Xml_getTmin</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getTmin</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the minimum temperature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Minimum temperature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="345" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="344" bodyend="348"/>
        <references refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" compoundref="xml__parameter_8c" startline="153" endline="181">Xml_getDoubleNumber</references>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="gsl__recuit_8h_1a41e47a5713188f196ebc7a66a9052d3d" compoundref="gsl__recuit_8c" startline="279" endline="291">Recuit_printParametre</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getCount</definition>
        <argsstring>(xmlConfig_t *conf, const char *requete)</argsstring>
        <name>Xml_getCount</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>requete</declname>
        </param>
        <briefdescription>
<para>Get count. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requete</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Count </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="359" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="358" bodyend="387"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <referencedby refid="xml__parameter_8h_1ac3e0275bc7a3d63afc8d3b2d12c61bfa" compoundref="xml__parameter_8c" startline="486" endline="490">Xml_getNbBannedSpecies</referencedby>
        <referencedby refid="xml__parameter_8h_1a6c64d19778a053565d856336edd34ed3" compoundref="xml__parameter_8c" startline="396" endline="400">Xml_getNbCouples</referencedby>
        <referencedby refid="xml__parameter_8h_1add66857b0f3c13f0ebccde7b4a1ad891" compoundref="xml__parameter_8c" startline="473" endline="477">Xml_getNbEquations</referencedby>
        <referencedby refid="xml__parameter_8h_1af3dadd102ea2be0a37f7095dc893092c" compoundref="xml__parameter_8c" startline="409" endline="413">Xml_getNbParameters</referencedby>
        <referencedby refid="xml__parameter_8h_1a432969ec33658e167cb4337802044261" compoundref="xml__parameter_8c" startline="447" endline="451">Xml_getNbReaction</referencedby>
        <referencedby refid="xml__parameter_8h_1a7d165cd94b7d59e4adb56c6d809e8b49" compoundref="xml__parameter_8c" startline="423" endline="438">Xml_getNbReactioninNoeud</referencedby>
        <referencedby refid="xml__parameter_8h_1a5cef06e3ec85ec0f67e81658db7e0c42" compoundref="xml__parameter_8c" startline="460" endline="464">Xml_getNbSpecies</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1af2cfdc761c81f2a612b89c4287532b59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbCouples</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbCouples</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the number of couples. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of couples </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="397" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="396" bodyend="400"/>
        <references refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" compoundref="xml__parameter_8c" startline="358" endline="387">Xml_getCount</references>
        <referencedby refid="data__parameters_8h_1ada6a0c0e47ea4e678bbd615c9371e8af" compoundref="data__parameters_8c" startline="408" endline="433">Data_allocParameters</referencedby>
        <referencedby refid="xml__parameter_8h_1aff7d36c23f3ed9618037ae6de0706fd6" compoundref="xml__parameter_8c" startline="541" endline="576">Xml_getReactionsNames</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a970461b8c6940e3446ae533b7ad02784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbParameters</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbParameters</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the number of parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="410" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="409" bodyend="413"/>
        <references refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" compoundref="xml__parameter_8c" startline="358" endline="387">Xml_getCount</references>
        <referencedby refid="data__parameters_8h_1ada6a0c0e47ea4e678bbd615c9371e8af" compoundref="data__parameters_8c" startline="408" endline="433">Data_allocParameters</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1abe3e4fdcc6be469255833ced99af8fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbReactioninNoeud</definition>
        <argsstring>(xmlConfig_t *conf, int noeud)</argsstring>
        <name>Xml_getNbReactioninNoeud</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noeud</declname>
        </param>
        <briefdescription>
<para>Count the number of reaction in one node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noeud</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of reaction in one node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="424" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="423" bodyend="438"/>
        <references refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" compoundref="xml__parameter_8c" startline="358" endline="387">Xml_getCount</references>
        <referencedby refid="data__parameters_8h_1ada6a0c0e47ea4e678bbd615c9371e8af" compoundref="data__parameters_8c" startline="408" endline="433">Data_allocParameters</referencedby>
        <referencedby refid="xml__parameter_8h_1a569e99d4f8bdc2a9a9e69987690ab5bf" compoundref="xml__parameter_8c" startline="500" endline="532">Xml_getReactionsNamesinNoeud</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a1237b1ca7c942eb4db3bc5a3edae6dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbReaction</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbReaction</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the number of reactions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of reactions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="448" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="447" bodyend="451"/>
        <references refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" compoundref="xml__parameter_8c" startline="358" endline="387">Xml_getCount</references>
        <referencedby refid="data__parameters_8h_1a46e8fbe37a14a679690ad84c4a596cc4" compoundref="data__parameters_8c" startline="238" endline="265">Data_allocScore</referencedby>
        <referencedby refid="xml__parameter_8h_1aff7d36c23f3ed9618037ae6de0706fd6" compoundref="xml__parameter_8c" startline="541" endline="576">Xml_getReactionsNames</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1aa38353601b43859be1905fb37632fbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbSpecies</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbSpecies</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the number of species. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of species </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="461" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="460" bodyend="464"/>
        <references refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" compoundref="xml__parameter_8c" startline="358" endline="387">Xml_getCount</references>
        <referencedby refid="data__parameters_8h_1a46e8fbe37a14a679690ad84c4a596cc4" compoundref="data__parameters_8c" startline="238" endline="265">Data_allocScore</referencedby>
        <referencedby refid="mpi__load_8h_1a73a3042b31e240b5785eed805f963212" compoundref="mpi__load_8c" startline="440" endline="520">Mpi_slave</referencedby>
        <referencedby refid="mpi__load_8h_1a4cf3597a859457305000e2168f205993" compoundref="mpi__load_8c" startline="273" endline="322">Mpi_writer</referencedby>
        <referencedby refid="xml__parameter_8h_1af6bd746aeab32ffb8ce8aca1eb39025c" compoundref="xml__parameter_8c" startline="585" endline="615">Xml_getSpecies</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a4cd7ca36e09a00f6eead68fa2fe9c181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbEquations</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbEquations</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the number of equations. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of equations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="474" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="473" bodyend="477"/>
        <references refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" compoundref="xml__parameter_8c" startline="358" endline="387">Xml_getCount</references>
        <referencedby refid="data__parameters_8h_1a014a6fdcabd0d2dbfee53acf4a32e218" compoundref="data__parameters_8c" startline="202" endline="225">Data_allocEquations</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a76777435e4d20d96bf38532590dde9df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getNbBannedSpecies</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getNbBannedSpecies</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get the number of banned species. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of banned species </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="487" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="486" bodyend="490"/>
        <references refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" compoundref="xml__parameter_8c" startline="358" endline="387">Xml_getCount</references>
        <referencedby refid="data__parameters_8h_1ada6a0c0e47ea4e678bbd615c9371e8af" compoundref="data__parameters_8c" startline="408" endline="433">Data_allocParameters</referencedby>
        <referencedby refid="xml__parameter_8h_1a4c7a3feb35dfee4b0003a396d064159a" compoundref="xml__parameter_8c" startline="624" endline="654">Xml_getBanned</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a5d5ca947e73c03c5be663e2d5e08b028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char ** Xml_getReactionsNamesinNoeud</definition>
        <argsstring>(xmlConfig_t *conf, int numero)</argsstring>
        <name>Xml_getReactionsNamesinNoeud</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numero</declname>
        </param>
        <briefdescription>
<para>Get list of reactions. </para>        </briefdescription>
        <detaileddescription>
<para>Get list of species.</para><para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numero</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of reactions</para></simplesect>
<simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of species </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="501" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="500" bodyend="532"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <references refid="xml__parameter_8c_1abe3e4fdcc6be469255833ced99af8fd5" compoundref="xml__parameter_8c" startline="423" endline="438">Xml_getNbReactioninNoeud</references>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a3b6fb6f415a7542cd722d9d327eea7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char ** Xml_getReactionsNames</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getReactionsNames</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get name of reactions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Name of reactions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="542" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="541" bodyend="576"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <references refid="xml__parameter_8c_1af2cfdc761c81f2a612b89c4287532b59" compoundref="xml__parameter_8c" startline="396" endline="400">Xml_getNbCouples</references>
        <references refid="xml__parameter_8c_1a1237b1ca7c942eb4db3bc5a3edae6dcb" compoundref="xml__parameter_8c" startline="447" endline="451">Xml_getNbReaction</references>
        <referencedby refid="data__parameters_8h_1a46e8fbe37a14a679690ad84c4a596cc4" compoundref="data__parameters_8c" startline="238" endline="265">Data_allocScore</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1ad0b6ab7f717b34351d9dfc0bfb39116f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** Xml_getSpecies</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getSpecies</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="586" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="585" bodyend="615"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <references refid="xml__parameter_8c_1aa38353601b43859be1905fb37632fbf0" compoundref="xml__parameter_8c" startline="460" endline="464">Xml_getNbSpecies</references>
        <referencedby refid="data__parameters_8h_1a46e8fbe37a14a679690ad84c4a596cc4" compoundref="data__parameters_8c" startline="238" endline="265">Data_allocScore</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a08ff3dcc547d1e4cd67fc5cdcf76207b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char ** Xml_getBanned</definition>
        <argsstring>(xmlConfig_t *conf)</argsstring>
        <name>Xml_getBanned</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Get list of banned species. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of banned species </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="625" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="624" bodyend="654"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <references refid="xml__parameter_8c_1a76777435e4d20d96bf38532590dde9df" compoundref="xml__parameter_8c" startline="486" endline="490">Xml_getNbBannedSpecies</references>
        <referencedby refid="data__parameters_8h_1ada6a0c0e47ea4e678bbd615c9371e8af" compoundref="data__parameters_8c" startline="408" endline="433">Data_allocParameters</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1afda4f9b23fe11dd5d1d054f02b15f6e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getSpeciesFinalAmount</definition>
        <argsstring>(xmlConfig_t *conf, char *species)</argsstring>
        <name>Xml_getSpeciesFinalAmount</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>species</declname>
        </param>
        <briefdescription>
<para>Get the final amount of one species. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>species</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of one species </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Final amount of one species </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="666" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="665" bodyend="697"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <referencedby refid="xml__parameter_8h_1a148b17c5cf3107548c515f285664c396" compoundref="xml__parameter_8c" startline="708" endline="717">Xml_getallSpeciesFinalAmount</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1ab64b5c70d3ad223797b8047c29b3a176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * Xml_getallSpeciesFinalAmount</definition>
        <argsstring>(xmlConfig_t *conf, char **species, int taille)</argsstring>
        <name>Xml_getallSpeciesFinalAmount</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>species</declname>
        </param>
        <param>
          <type>int</type>
          <declname>taille</declname>
        </param>
        <briefdescription>
<para>Get Table of species amount. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>species</parametername>
</parameternamelist>
<parameterdescription>
<para>Table of species </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taille</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of species </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Table of species amount </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="709" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="708" bodyend="717"/>
        <references refid="xml__parameter_8c_1afda4f9b23fe11dd5d1d054f02b15f6e6" compoundref="xml__parameter_8c" startline="665" endline="697">Xml_getSpeciesFinalAmount</references>
        <referencedby refid="data__parameters_8h_1a46e8fbe37a14a679690ad84c4a596cc4" compoundref="data__parameters_8c" startline="238" endline="265">Data_allocScore</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1ae5b43caf011ecd4332145b1d5650ed9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getSpeciesWeight</definition>
        <argsstring>(xmlConfig_t *conf, char *species)</argsstring>
        <name>Xml_getSpeciesWeight</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>species</declname>
        </param>
        <briefdescription>
<para>Get Species weight. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>species</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of one species </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Species weight </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="728" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="727" bodyend="759"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <referencedby refid="xml__parameter_8h_1ac461fdf86d516a60bd037eadc2dc492a" compoundref="xml__parameter_8c" startline="770" endline="779">Xml_getallSpeciesWeight</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a2269733e284ffe4b8ff58248e060efea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * Xml_getallSpeciesWeight</definition>
        <argsstring>(xmlConfig_t *conf, char **species, int taille)</argsstring>
        <name>Xml_getallSpeciesWeight</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>species</declname>
        </param>
        <param>
          <type>int</type>
          <declname>taille</declname>
        </param>
        <briefdescription>
<para>Get list of species weight. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>species</parametername>
</parameternamelist>
<parameterdescription>
<para>Table of species </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taille</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of species </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of species weight </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="771" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="770" bodyend="779"/>
        <references refid="xml__parameter_8c_1ae5b43caf011ecd4332145b1d5650ed9e" compoundref="xml__parameter_8c" startline="727" endline="759">Xml_getSpeciesWeight</references>
        <referencedby refid="data__parameters_8h_1a46e8fbe37a14a679690ad84c4a596cc4" compoundref="data__parameters_8c" startline="238" endline="265">Data_allocScore</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a33fc7308481aa2c6ceebbf6dffa2626d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char ** Xml_allocEquation</definition>
        <argsstring>(char **equation, int nb_noeud)</argsstring>
        <name>Xml_allocEquation</name>
        <param>
          <type>char **</type>
          <declname>equation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_noeud</declname>
        </param>
        <briefdescription>
<para>Allocate memory for the list of equation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>equation</parametername>
</parameternamelist>
<parameterdescription>
<para>list of equation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_noeud</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of reactions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="790" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="789" bodyend="803"/>
        <referencedby refid="xml__parameter_8h_1a5645a54d20bd3d2347f06b3167d1ed6a" compoundref="xml__parameter_8c" startline="854" endline="900">Xml_getKineticLaw</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1aebbd1beeffa0d86d3fb414443579bd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Xml_getKineticLawNodes</definition>
        <argsstring>(xmlConfig_t *conf, int num_equation)</argsstring>
        <name>Xml_getKineticLawNodes</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_equation</declname>
        </param>
        <briefdescription>
<para>Get the kinetic law for one node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_equation</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ninetic law for one node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="814" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="813" bodyend="843"/>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <referencedby refid="data__parameters_8h_1a014a6fdcabd0d2dbfee53acf4a32e218" compoundref="data__parameters_8c" startline="202" endline="225">Data_allocEquations</referencedby>
      </memberdef>
      <memberdef kind="function" id="xml__parameter_8c_1a62bde7fe978c5b428aedf7011ef5444f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char ***</type>
        <definition>char *** Xml_getKineticLaw</definition>
        <argsstring>(xmlConfig_t *conf, int num_equation, int nb_noeud)</argsstring>
        <name>Xml_getKineticLaw</name>
        <param>
          <type><ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_equation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_noeud</declname>
        </param>
        <briefdescription>
<para>Get list of kinetic laws. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Amine Ghozlane </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct <ref refid="structxmlConfig__t" kindref="compound">xmlConfig_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_equation</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of equation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_noeud</parametername>
</parameternamelist>
<parameterdescription>
<para>Number nodes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List of kinetic laws </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" line="855" bodyfile="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c" bodystart="854" bodyend="900"/>
        <references refid="gsl__recuit_8c_1ae78b385d27f680dd0d0bd3b700776071" compoundref="gsl__recuit_8c" startline="52">all</references>
        <references refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" compoundref="xml__parameter_8h" startline="37">xmlConfig_t::ctxt</references>
        <references refid="xml__parameter_8c_1a33fc7308481aa2c6ceebbf6dffa2626d" compoundref="xml__parameter_8c" startline="789" endline="803">Xml_allocEquation</references>
        <referencedby refid="data__parameters_8h_1a014a6fdcabd0d2dbfee53acf4a32e218" compoundref="data__parameters_8c" startline="202" endline="225">Data_allocEquations</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Xml reader for parametre.xml. </para>    </briefdescription>
    <detaileddescription>
<para>This file is part of MetaBoFlux (<ulink url="http://www.cbib.u-bordeaux2.fr/metaboflux/">http://www.cbib.u-bordeaux2.fr/metaboflux/</ulink>) Copyright (C) 2010 Amine Ghozlane from LaBRI and University of Bordeaux 1</para><para>MetaBoFlux is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para><para>MetaBoFlux is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para><para>You should have received a copy of the GNU Lesser General Public License along with this program. If not, see &lt;<ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>&gt;.</para><para><simplesect kind="author"><para>{Amine Ghozlane} </para></simplesect>
<simplesect kind="version"><para>2.0 </para></simplesect>
<simplesect kind="date"><para>15 janvier 2010 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="26" refid="xml__parameter_8c_1a369266c24eacffb87046522897a570d5" refkind="member"><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/parser.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libxml/xpath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xml__parameter_8h" kindref="compound" tooltip="Xml reader for parametre.xml.">xml_parameter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="xml__parameter_8h_1a4ea94aa6222a68813a163a5c01e160f6" refkind="member"><highlight class="normal"><ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*<ref refid="xml__parameter_8c_1ab12b2036f57ce74c1c2ac44a19434bda" kindref="member" tooltip="Initialize and load the parameter.xml.">Xml_loadConfig</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fichier)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>et<sp/>chargement<sp/>du<sp/>fichier<sp/>XML<sp/>en<sp/>memoire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf=NULL;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>conf=(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*)malloc(1*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref>));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>assert(conf!=NULL);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Initialisation*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>conf-&gt;<ref refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" kindref="member">fichier</ref><sp/>=NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>conf-&gt;<ref refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" kindref="member">doc</ref><sp/>=NULL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>conf-&gt;<ref refid="structxmlConfig__t_1a535cd8a3e33d4ae2a00ab29f32a442ff" kindref="member">racine</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>conf-&gt;<ref refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" kindref="member">fichier</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(fichier)+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>strcpy(conf-&gt;<ref refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" kindref="member">fichier</ref>,fichier);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Creation<sp/>de<sp/>l&apos;arbre<sp/>DOM<sp/>a<sp/>partir<sp/>du<sp/>fichier<sp/>XML<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>xmlKeepBlanksDefault(0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((conf-&gt;<ref refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" kindref="member">doc</ref><sp/>=<sp/>xmlParseFile((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)conf-&gt;<ref refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" kindref="member">fichier</ref>))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Erreur<sp/>de<sp/>creation<sp/>de<sp/>l&apos;arbre<sp/>DOM\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xml__parameter_8c_1a8b93c82fdf9f830d2170f8dfe1e206bd" kindref="member" tooltip="Free the Struct xmlConfig_t.">Xml_freeConfig</ref>(conf);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recuperation<sp/>de<sp/>la<sp/>racine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>conf-&gt;<ref refid="structxmlConfig__t_1a535cd8a3e33d4ae2a00ab29f32a442ff" kindref="member">racine</ref><sp/>=<sp/>xmlDocGetRootElement(conf-&gt;<ref refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" kindref="member">doc</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conf-&gt;<ref refid="structxmlConfig__t_1a535cd8a3e33d4ae2a00ab29f32a442ff" kindref="member">racine</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>xmlStrcasecmp(conf-&gt;<ref refid="structxmlConfig__t_1a535cd8a3e33d4ae2a00ab29f32a442ff" kindref="member">racine</ref>-&gt;name,<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;parameters&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Racine<sp/>du<sp/>fichier<sp/>incorrect<sp/>%s<sp/>au<sp/>lieu<sp/>de<sp/>parameters\n&quot;</highlight><highlight class="normal">,conf-&gt;<ref refid="structxmlConfig__t_1a535cd8a3e33d4ae2a00ab29f32a442ff" kindref="member">racine</ref>-&gt;name);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xml__parameter_8c_1a8b93c82fdf9f830d2170f8dfe1e206bd" kindref="member" tooltip="Free the Struct xmlConfig_t.">Xml_freeConfig</ref>(conf);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>de<sp/>l&apos;environnement<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>xmlXPathInit();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Creation<sp/>d&apos;un<sp/>contexte<sp/>pour<sp/>les<sp/>requetes<sp/>XPath*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref><sp/>=<sp/>xmlXPathNewContext(conf-&gt;<ref refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" kindref="member">doc</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Erreur<sp/>de<sp/>creation<sp/>du<sp/>contexte<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xml__parameter_8c_1a8b93c82fdf9f830d2170f8dfe1e206bd" kindref="member" tooltip="Free the Struct xmlConfig_t.">Xml_freeConfig</ref>(conf);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conf;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="xml__parameter_8h_1ae8efb0436cd231ff904c662e662210f7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a8b93c82fdf9f830d2170f8dfe1e206bd" kindref="member" tooltip="Free the Struct xmlConfig_t.">Xml_freeConfig</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Liberation<sp/>de<sp/>la<sp/>memoire<sp/>pour<sp/>la<sp/>structure<sp/>xmlConfig_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>!=NULL)<sp/>xmlXPathFreeContext(conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conf-&gt;<ref refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" kindref="member">doc</ref>!=NULL)<sp/>xmlFreeDoc(conf-&gt;<ref refid="structxmlConfig__t_1a35e7e8fc3398d0866fbf91b0245fd7b9" kindref="member">doc</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conf-&gt;<ref refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" kindref="member">fichier</ref>!=NULL)<sp/>free(conf-&gt;<ref refid="structxmlConfig__t_1a7a2f1cbf9d3b49f1b2debb85a8606658" kindref="member">fichier</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conf!=NULL)<sp/>free(conf);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>xmlCleanupParser();</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="xml__parameter_8h_1a718b56ca89a1aba6bf2519b575394a72" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" kindref="member" tooltip="Get integer value.">Xml_getNumber</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*requete)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recherche<sp/>des<sp/>valeurs<sp/>entieres<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(requete),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Manipulation<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XPATH_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=(int)xmlXPathCastToNumber(xpathRes);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>recuperer<sp/>le<sp/>nombre<sp/>de<sp/>simulations\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Libere<sp/>la<sp/>memoire<sp/>alloue<sp/>a<sp/>l&apos;objet<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="xml__parameter_8h_1ae92f843acf0a723abf982d04d774aec7" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" kindref="member" tooltip="Get double value.">Xml_getDoubleNumber</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*requete)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recherche<sp/>des<sp/>valeurs<sp/>double<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result=0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(requete),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Manipulation<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XPATH_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=(double)xmlXPathCastToNumber(xpathRes);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>recuperer<sp/>le<sp/>nombre\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Libere<sp/>la<sp/>memoire<sp/>alloue<sp/>a<sp/>l&apos;objet<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="xml__parameter_8h_1ac7cfe344dbbf799ef808fb9a4e8ec391" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="xml__parameter_8c_1a2961477293ec8eb23f4b7f2c654932a0" kindref="member" tooltip="Get name value.">Xml_getString</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recherche<sp/>du<sp/>texte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>result=NULL;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;string(/parameters/name)&quot;</highlight><highlight class="normal">),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Manipulation<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XPATH_STRING)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)xmlXPathCastToString(xpathRes);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>recuperer<sp/>le<sp/>nom<sp/>des<sp/>simulations\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Libere<sp/>la<sp/>memoire<sp/>alloue<sp/>a<sp/>l&apos;objet<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="xml__parameter_8h_1a895187a8d4080d24deaf71911b49b865" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a503fd8e4167aef94fa22e0c71a5b6afa" kindref="member" tooltip="Get number of simulation.">Xml_getNbSimulations</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>de<sp/>simulation<sp/>a<sp/>effectuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" kindref="member" tooltip="Get integer value.">Xml_getNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/nbSimulations)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="xml__parameter_8h_1a61b2b14f1974b2da0977164a0eb7e647" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1afeff8e3300946c36cea36ddd964e9265" kindref="member" tooltip="Get number of tries for modelling.">Xml_getNbTriesMod</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>d&apos;essai<sp/>a<sp/>effectuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" kindref="member" tooltip="Get integer value.">Xml_getNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/nbtriesMod)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="xml__parameter_8h_1af202e24f690b234cc2c0a09a065e7de4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a7b67ce794add8c04563e07f9d25c6096" kindref="member" tooltip="Get number of tries for the simulated annealing and minimization.">Xml_getNbTriesSa</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>d&apos;essai<sp/>a<sp/>effectuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" kindref="member" tooltip="Get integer value.">Xml_getNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/nbtriesSa)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="xml__parameter_8h_1ab5ca046bc833b5caf81cf482f1b6f162" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ae49d86627f34fb18c996a3060e2a297a" kindref="member" tooltip="Get number of iteration.">Xml_getNbIters</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>d&apos;Iteration<sp/>a<sp/>effectuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" kindref="member" tooltip="Get integer value.">Xml_getNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/nbiters)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="xml__parameter_8h_1afb1ba7f2d5ce467dc6a3e02219250a6f" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ade93fd888d36e908c7386f25b2836137" kindref="member" tooltip="Get number of group.">Xml_getNbGroup</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>d&apos;Iteration<sp/>a<sp/>effectuer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4024e4decc374dde9740834c575c2057" kindref="member" tooltip="Get integer value.">Xml_getNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/nbGroup)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="xml__parameter_8h_1a7274d52d77ad2ac704e5d1a21cb29b5b" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a1770352729facbccf4b8fb288551ebbb" kindref="member" tooltip="Get the step size.">Xml_getStepSize</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>taille<sp/>du<sp/>pas<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" kindref="member" tooltip="Get double value.">Xml_getDoubleNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/stepsize)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="xml__parameter_8h_1add80be509519cbdf7e259a17cbc89f59" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1af051a5017271240c72cad70ee82b6af7" kindref="member" tooltip="Get the Boltzmann value.">Xml_getBoltzmann</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>valeur<sp/>de<sp/>la<sp/>constante<sp/>de<sp/>boltzmann<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" kindref="member" tooltip="Get double value.">Xml_getDoubleNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/boltzmann)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="xml__parameter_8h_1a5a0bcc251114c768459436767f263df3" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab2406faab9296a45cc596beec457f268" kindref="member" tooltip="Get the initial temperature.">Xml_getTinitial</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>temperature<sp/>initiale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" kindref="member" tooltip="Get double value.">Xml_getDoubleNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/Tinitial)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="xml__parameter_8h_1a18841e8e468959cccb9acbd2dd364997" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a9e2c04caf11e5a95f5aa22f6f37f479d" kindref="member" tooltip="Get the variation of temperature.">Xml_getMuT</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>variation<sp/>de<sp/>temperature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" kindref="member" tooltip="Get double value.">Xml_getDoubleNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/muT)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="xml__parameter_8h_1ac2fc806f9a568ba7272a8b1e235ba3e1" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a9401fbdd3c314c0e729c9a278a6e2805" kindref="member" tooltip="Get the minimum temperature.">Xml_getTmin</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>temperature<sp/>minimum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4f3a58135812977f4928052008e58713" kindref="member" tooltip="Get double value.">Xml_getDoubleNumber</ref>(conf,</highlight><highlight class="stringliteral">&quot;number(/parameters/Tmin)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="xml__parameter_8h_1af5e51f22021d8e7d4fd57564747c87dd" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*requete)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes=NULL;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(requete),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes==NULL)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Manipulation<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XPATH_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=(int)xmlXPathCastToNumber(xpathRes);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>recuperer<sp/>le<sp/>decompte\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Libere<sp/>la<sp/>memoire<sp/>alloue<sp/>a<sp/>l&apos;objet<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>des<sp/>decomptes<sp/>sur<sp/>l&apos;objet<sp/>xml<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="xml__parameter_8h_1a6c64d19778a053565d856336edd34ed3" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1af2cfdc761c81f2a612b89c4287532b59" kindref="member" tooltip="Get the number of couples.">Xml_getNbCouples</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>de<sp/>couples<sp/>de<sp/>parametres<sp/>en<sp/>jeu<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(conf,</highlight><highlight class="stringliteral">&quot;count(/parameters/listOfReactions/noeud)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="xml__parameter_8h_1af3dadd102ea2be0a37f7095dc893092c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a970461b8c6940e3446ae533b7ad02784" kindref="member" tooltip="Get the number of parameters.">Xml_getNbParameters</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>de<sp/>couples<sp/>de<sp/>parametres<sp/>en<sp/>jeu<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(conf,</highlight><highlight class="stringliteral">&quot;count(/parameters/listOfReactions/noeud/reaction)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="xml__parameter_8h_1a7d165cd94b7d59e4adb56c6d809e8b49" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1abe3e4fdcc6be469255833ced99af8fd5" kindref="member" tooltip="Count the number of reaction in one node.">Xml_getNbReactioninNoeud</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noeud)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ask=NULL;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=0,<sp/>temp=0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>temp=asprintf(&amp;ask,</highlight><highlight class="stringliteral">&quot;count(/parameters/listOfReactions/noeud[@reference=\&quot;%d\&quot;]/reaction)&quot;</highlight><highlight class="normal">,noeud);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp==-1){</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;asprintf<sp/>ne<sp/>fonctionne<sp/>pas\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>result=<ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(conf,ask);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ask!=NULL)<sp/>free(ask);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>de<sp/>reaction<sp/>dans<sp/>un<sp/>noeud<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="xml__parameter_8h_1a432969ec33658e167cb4337802044261" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a1237b1ca7c942eb4db3bc5a3edae6dcb" kindref="member" tooltip="Get the number of reactions.">Xml_getNbReaction</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>de<sp/>reaction<sp/>dans<sp/>un<sp/>noeud<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(conf,</highlight><highlight class="stringliteral">&quot;count(/parameters/listOfReactions/noeud/reaction)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="xml__parameter_8h_1a5cef06e3ec85ec0f67e81658db7e0c42" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1aa38353601b43859be1905fb37632fbf0" kindref="member" tooltip="Get the number of species.">Xml_getNbSpecies</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>de<sp/>especes<sp/>en<sp/>jeu<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(conf,</highlight><highlight class="stringliteral">&quot;count(/parameters/listOfSpecies/species)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="xml__parameter_8h_1add66857b0f3c13f0ebccde7b4a1ad891" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a4cd7ca36e09a00f6eead68fa2fe9c181" kindref="member" tooltip="Get the number of equations.">Xml_getNbEquations</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>d&apos;equation<sp/>en<sp/>jeu<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(conf,</highlight><highlight class="stringliteral">&quot;count(/parameters/listOfKineticlaw/math)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="xml__parameter_8h_1ac3e0275bc7a3d63afc8d3b2d12c61bfa" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1a76777435e4d20d96bf38532590dde9df" kindref="member" tooltip="Get the number of banned species.">Xml_getNbBannedSpecies</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>de<sp/>molecules<sp/>bannies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ab341a0b1147a2c5866cab65f552f0817" kindref="member" tooltip="Get count.">Xml_getCount</ref>(conf,</highlight><highlight class="stringliteral">&quot;count(/parameters/listOfBannedCompounds/compounds)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="xml__parameter_8h_1a569e99d4f8bdc2a9a9e69987690ab5bf" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="xml__parameter_8c_1a5d5ca947e73c03c5be663e2d5e08b028" kindref="member" tooltip="Get list of reactions.">Xml_getReactionsNamesinNoeud</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numero)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL,<sp/>cur_node<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**result=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)malloc(<ref refid="xml__parameter_8c_1abe3e4fdcc6be469255833ced99af8fd5" kindref="member" tooltip="Count the number of reaction in one node.">Xml_getNbReactioninNoeud</ref>(conf,numero)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reactions<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>asprintf(&amp;reactions,</highlight><highlight class="stringliteral">&quot;/parameters/listOfReactions/noeud[@reference=\&quot;%d\&quot;]&quot;</highlight><highlight class="normal">,numero);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(reactions),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cur_node<sp/>=<sp/>arf-&gt;children;<sp/>cur_node;<sp/>cur_node<sp/>=<sp/>cur_node-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_node-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc((strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(cur_node,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">)))+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(result[i],(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(cur_node,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reactions!=NULL)<sp/>free(reactions);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>liste<sp/>des<sp/>reactions<sp/>d&apos;un<sp/>noeud<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="xml__parameter_8h_1aff7d36c23f3ed9618037ae6de0706fd6" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="xml__parameter_8c_1a3b6fb6f415a7542cd722d9d327eea7b8" kindref="member" tooltip="Get name of reactions.">Xml_getReactionsNames</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL,<sp/>cur_node<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbreaction=<ref refid="xml__parameter_8c_1af2cfdc761c81f2a612b89c4287532b59" kindref="member" tooltip="Get the number of couples.">Xml_getNbCouples</ref>(conf),i=0,j;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**result=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)malloc(<ref refid="xml__parameter_8c_1a1237b1ca7c942eb4db3bc5a3edae6dcb" kindref="member" tooltip="Get the number of reactions.">Xml_getNbReaction</ref>(conf)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reactions<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;nbreaction;j++){</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asprintf(&amp;reactions,</highlight><highlight class="stringliteral">&quot;/parameters/listOfReactions/noeud[@reference=\&quot;%d\&quot;]&quot;</highlight><highlight class="normal">,j);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(reactions),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cur_node<sp/>=<sp/>arf-&gt;children;<sp/>cur_node;<sp/>cur_node<sp/>=<sp/>cur_node-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_node-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc((strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(cur_node,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">)))+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(result[i],(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(cur_node,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reactions!=NULL)<sp/>free(reactions);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>liste<sp/>des<sp/>reactions<sp/>d&apos;un<sp/>noeud<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="xml__parameter_8h_1af6bd746aeab32ffb8ce8aca1eb39025c" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="xml__parameter_8c_1ad0b6ab7f717b34351d9dfc0bfb39116f" kindref="member">Xml_getSpecies</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL,<sp/>cur_node<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**result=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)malloc(<ref refid="xml__parameter_8c_1aa38353601b43859be1905fb37632fbf0" kindref="member" tooltip="Get the number of species.">Xml_getNbSpecies</ref>(conf)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;/parameters/listOfSpecies&quot;</highlight><highlight class="normal">),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cur_node<sp/>=<sp/>arf-&gt;children;<sp/>cur_node;<sp/>cur_node<sp/>=<sp/>cur_node-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_node-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(cur_node,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>liste<sp/>des<sp/>especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="xml__parameter_8h_1a4c7a3feb35dfee4b0003a396d064159a" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="xml__parameter_8c_1a08ff3dcc547d1e4cd67fc5cdcf76207b" kindref="member" tooltip="Get list of banned species.">Xml_getBanned</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL,<sp/>cur_node<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**result=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)malloc(<ref refid="xml__parameter_8c_1a76777435e4d20d96bf38532590dde9df" kindref="member" tooltip="Get the number of banned species.">Xml_getNbBannedSpecies</ref>(conf)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;/parameters/listOfBannedCompounds&quot;</highlight><highlight class="normal">),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cur_node<sp/>=<sp/>arf-&gt;children;<sp/>cur_node;<sp/>cur_node<sp/>=<sp/>cur_node-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_node-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(cur_node,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>liste<sp/>des<sp/>especes<sp/>bannies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="xml__parameter_8h_1a9d0d9ce69bd349b6b7344fbaa6a63fc0" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1afda4f9b23fe11dd5d1d054f02b15f6e6" kindref="member" tooltip="Get the final amount of one species.">Xml_getSpeciesFinalAmount</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*species)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ask=NULL,*reponse=NULL;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>asprintf(&amp;ask,</highlight><highlight class="stringliteral">&quot;/parameters/listOfSpecies/species[@id=\&quot;%s\&quot;]&quot;</highlight><highlight class="normal">,species);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(ask),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reponse=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(arf,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;finalAmount&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reponse!=NULL)<sp/>result=atoi(reponse);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>result=-1;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ask!=NULL)<sp/>free(ask);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>la<sp/>quantite<sp/>final<sp/>de<sp/>l&apos;espece<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="xml__parameter_8h_1a148b17c5cf3107548c515f285664c396" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="xml__parameter_8c_1ab64b5c70d3ad223797b8047c29b3a176" kindref="member" tooltip="Get Table of species amount.">Xml_getallSpeciesFinalAmount</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**species,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*result,i;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>result=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)malloc(taille*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;taille;i++){</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[i]=<sp/><ref refid="xml__parameter_8c_1afda4f9b23fe11dd5d1d054f02b15f6e6" kindref="member" tooltip="Get the final amount of one species.">Xml_getSpeciesFinalAmount</ref>(conf,<sp/>species[i]);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>tableau<sp/>contenant<sp/>les<sp/>quantites<sp/>de<sp/>toutes<sp/>especes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="xml__parameter_8h_1ac863f3b5d07ff53656292f8ae60ab56f" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1ae5b43caf011ecd4332145b1d5650ed9e" kindref="member" tooltip="Get Species weight.">Xml_getSpeciesWeight</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*species)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ask=NULL,*reponse=NULL;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=0;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>asprintf(&amp;ask,</highlight><highlight class="stringliteral">&quot;/parameters/listOfSpecies/species[@id=\&quot;%s\&quot;]&quot;</highlight><highlight class="normal">,species);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(ask),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reponse=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlGetNoNsProp(arf,xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reponse!=NULL)<sp/>result=atoi(reponse);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>result=-1;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ask!=NULL)<sp/>free(ask);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>poids<sp/>statistique<sp/>de<sp/>la<sp/>molecule<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="xml__parameter_8h_1ac461fdf86d516a60bd037eadc2dc492a" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="xml__parameter_8c_1a2269733e284ffe4b8ff58248e060efea" kindref="member" tooltip="Get list of species weight.">Xml_getallSpeciesWeight</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**species,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*result,i;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>result=(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)malloc(taille*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;taille;i++){</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result[i]=<sp/><ref refid="xml__parameter_8c_1ae5b43caf011ecd4332145b1d5650ed9e" kindref="member" tooltip="Get Species weight.">Xml_getSpeciesWeight</ref>(conf,<sp/>species[i]);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>poids<sp/>statistique<sp/>de<sp/>toutes<sp/>les<sp/>molecules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="xml__parameter_8h_1a387b2b80fc518e2a7deb67558880bbf8" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="xml__parameter_8c_1a33fc7308481aa2c6ceebbf6dffa2626d" kindref="member" tooltip="Allocate memory for the list of equation.">Xml_allocEquation</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**equation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_noeud)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocation<sp/>memoire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>equation=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)malloc(nb_noeud*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>assert(equation!=NULL);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialisation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;nb_noeud;i++){</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>equation[i]=NULL;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Alloue<sp/>la<sp/>memoire<sp/>necessaire<sp/>aux<sp/>listes<sp/>des<sp/>equations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>equation;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="xml__parameter_8h_1ae14e8b44d2e2b750d81490c74e0659e0" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xml__parameter_8c_1aebbd1beeffa0d86d3fb414443579bd2c" kindref="member" tooltip="Get the kinetic law for one node.">Xml_getKineticLawNodes</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_equation)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL,<sp/>cur_node=NULL;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ask=NULL;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_noeud=0;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>asprintf(&amp;ask,</highlight><highlight class="stringliteral">&quot;/parameters/listOfKineticlaw/math[@display=\&quot;block_%d\&quot;]/mrow&quot;</highlight><highlight class="normal">,num_equation);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(ask),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!xpathRes)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decompte<sp/>du<sp/>nombre<sp/>de<sp/>noeud<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cur_node<sp/>=<sp/>arf-&gt;children;<sp/>cur_node;<sp/>cur_node<sp/>=<sp/>cur_node-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_noeud++;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ask!=NULL)<sp/>free(ask);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>le<sp/>nombre<sp/>d&apos;expressions<sp/>mathematiques<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_noeud;</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="854" refid="xml__parameter_8h_1a5645a54d20bd3d2347f06b3167d1ed6a" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***<ref refid="xml__parameter_8c_1a62bde7fe978c5b428aedf7011ef5444f" kindref="member" tooltip="Get list of kinetic laws.">Xml_getKineticLaw</ref>(<ref refid="structxmlConfig__t" kindref="compound" tooltip="Structure containing all information from parameter.xml.">xmlConfig_t</ref><sp/>*conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_equation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_noeud)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>xmlXPathObjectPtr<sp/>xpathRes<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>xmlNodePtr<sp/>arf<sp/>=<sp/>NULL,<sp/>cur_node=NULL;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***<ref refid="gsl__recuit_8c_1ae78b385d27f680dd0d0bd3b700776071" kindref="member">all</ref>=NULL,<sp/>*ask=NULL;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,j;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocation<sp/>de<sp/>la<sp/>matrice<sp/>des<sp/>resultats<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>all=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***)malloc(2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>assert(all!=NULL);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++){</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>=<sp/>0<sp/><sp/>et<sp/>name<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>all[j]=<ref refid="xml__parameter_8c_1a33fc7308481aa2c6ceebbf6dffa2626d" kindref="member" tooltip="Allocate memory for the list of equation.">Xml_allocEquation</ref>(all[j],nb_noeud);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluation<sp/>de<sp/>l&apos;expression<sp/>XPath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>asprintf(&amp;ask,</highlight><highlight class="stringliteral">&quot;/parameters/listOfKineticlaw/math[@display=\&quot;block_%d\&quot;]/mrow&quot;</highlight><highlight class="normal">,num_equation);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>xpathRes<sp/>=<sp/>xmlXPathEvalExpression(xmlCharStrdup(ask),<sp/>conf-&gt;<ref refid="structxmlConfig__t_1ae21311533cb59c9752bf21ffce5d5316" kindref="member">ctxt</ref>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erreur<sp/>expression<sp/>xpath<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes==NULL)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Erreur<sp/>sur<sp/>l&apos;expression<sp/>XPath\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Traitement<sp/>du<sp/>resultat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xpathRes-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE){</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arf=xpathRes-&gt;nodesetval-&gt;nodeTab[0];</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enregistrement<sp/>des<sp/>noeuds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cur_node<sp/>=<sp/>arf-&gt;children;<sp/>cur_node;<sp/>cur_node<sp/>=<sp/>cur_node-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arf!=NULL){</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all[0][i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)cur_node-&gt;name)+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(all[0][i],<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)cur_node-&gt;name));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all[1][i]=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlXPathCastNodeToString(cur_node)))+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(all[1][i],<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)xmlXPathCastNodeToString(cur_node)));</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathRes!=NULL)<sp/>xmlXPathFreeObject(xpathRes);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ask!=NULL)free(ask);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retourne<sp/>les<sp/>expressions<sp/>mathematiques<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="gsl__recuit_8c_1ae78b385d27f680dd0d0bd3b700776071" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/amine/workspace/MetaboFlux/metaboflux/src/xml_parameter.c"/>
  </compounddef>
</doxygen>
